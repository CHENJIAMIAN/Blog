name: Sync Branches

on:
  push:
    branches:
      - master

jobs:
  sync_branches:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "GitHub Action"
        git config user.email "github-action@example.com"

    - name: Sync master branch to gh_action_branch
      run: |
        git checkout gh_action_branch
        git merge --allow-unrelated-histories --strategy-option=ours master -m "Syncing master to gh_action_branch"
        git push origin gh_action_branch
# 这个 GitHub Action 工作流包含以下几个步骤：

# 检出仓库。这将克隆仓库并检出当前推送到的分支（在这里是 master）。
# 配置 Git。为了使提交看起来像是由 GitHub Action 完成的，我们设置了 Git 用户名和电子邮件。
# 将 master 分支同步到 master2。我们首先检出 master2 分支，然后使用 git merge 命令将 master 分支的更改合并到 master2 分支。我们使用 --allow-unrelated-histories 选项以允许合并没有共享历史记录的分支，并使用 --strategy-option=theirs 选项以在合并冲突时始终选择 master 分支的更改。最后，我们将 master2 分支推送回远程仓库。
# 这个 GitHub Action 工作流将在每次推送到 master 分支时启动，自动将 master 分支的所有内容复制到 master2 分支。注意，这个工作流只会覆盖 master2 分支中与 master 分支中文件名
