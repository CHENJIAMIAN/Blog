import{_ as s,o as n,c as a,O as l}from"./chunks/framework.4afe7240.js";const i=JSON.parse('{"title":"类","description":"","frontmatter":{},"headers":[],"relativePath":"Python/【python】Class.md","filePath":"Python/【python】Class.md"}'),p={name:"Python/【python】Class.md"},o=l(`<h2 id="定义与调用" tabindex="-1">定义与调用 <a class="header-anchor" href="#定义与调用" aria-label="Permalink to &quot;定义与调用&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">  a</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#self是必须的！！！！！！！self相当于其他语言的this,改为this也是可以的</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i am F</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#调用</span></span>
<span class="line"><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;">#输出i am F a</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#给类添加变量</span></span>
<span class="line"><span style="color:#A6ACCD;">C</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">newValue</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><h2 id="构造函数私有方法" tabindex="-1">构造函数 私有方法 <a class="header-anchor" href="#构造函数私有方法" aria-label="Permalink to &quot;构造函数		私有方法&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">#构造函数</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__privateMethod</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#私有方法</span></span></code></pre></div><p>继承</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">parentClass</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#FFCB6B;">super</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">c</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">C的实例</span><span style="color:#89DDFF;">]).</span><span style="color:#82AAFF;">parentMethod</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#调用父类的方法</span></span></code></pre></div><p>类变量 实例变量</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">	classValue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">类变量</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#构造函数</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">		self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">classValue</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">实例变量</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">+</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">classValue</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">                     		</span><span style="color:#676E95;font-style:italic;">#&#39;类变量&#39;	</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">classValue</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 					</span><span style="color:#676E95;font-style:italic;">#&#39;实例变量777&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">		self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__class__</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">classValue</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">修改后的类变量</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">	        </span><span style="color:#676E95;font-style:italic;"># self.__class__相当于C</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">classValue</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	                		</span><span style="color:#676E95;font-style:italic;">#&#39;修改后的类变量&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">777</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>类方法(静态方法)</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">classmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Myclassmethod</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">静态方法</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">C</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Myclassmethod</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h2 id="函数调用lambda" tabindex="-1">函数调用 lambda <a class="header-anchor" href="#函数调用lambda" aria-label="Permalink to &quot;函数调用		lambda&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;">  	   </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">F_withSelf</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">num1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">num2</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">	   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	   </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#等同于</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">	lambdaF</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">lambda</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">y		</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#等同于 </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">F_noSelf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">num2</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">	   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	   </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#等同于</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">staticF</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">num2</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">	   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">staticF</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">staticF</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">F_noSelf</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">lambdaF</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#print(C().F_noSelf(1,2))#出错</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#因为C().F_noSelf(1,2)是语法糖，解释器把它翻译为 C.F_noSelf(C(),1,2)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#于是就出错了&quot;F_noSelf() takes 2 positional arguments but 3 were given&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#换成C.F_noSelf(1,2)就不会出错</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">F_withSelf</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#静态方法</span></span></code></pre></div><hr><h1 id="类" tabindex="-1">类 <a class="header-anchor" href="#类" aria-label="Permalink to &quot;类&quot;">​</a></h1><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">F_noSelf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">):</span><span style="color:#676E95;font-style:italic;">#不能被实例调用,只能被自己调用</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> arg	</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">F_noSelf</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">F_withSelf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">):</span><span style="color:#676E95;font-style:italic;">#可以被实例调用,也可以被自己调用</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> arg	</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">F_withSelf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">argToSelf</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">F_noSelf</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">C</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">F_withSelf</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))</span></span></code></pre></div><hr><h2 id="要使函数的局部变量信息在第n次调用依然可以保存下来" tabindex="-1">要使函数的局部变量信息在第n次调用依然可以保存下来 <a class="header-anchor" href="#要使函数的局部变量信息在第n次调用依然可以保存下来" aria-label="Permalink to &quot;要使函数的局部变量信息在第n次调用依然可以保存下来&quot;">​</a></h2><ul><li><p>闭包写法</p></li><li><p>闭包=内层函数+外层函数里的公共变量(参数)</p></li><li><p>#作用:保存函数的状态信息，使函数的局部变量信息在第n次调用依然可以保存下来</p></li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">base</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#C792EA;">nonlocal</span><span style="color:#A6ACCD;"> base	</span><span style="color:#676E95;font-style:italic;">#声明为非局部变量,相当与全局变量</span></span>
<span class="line"><span style="color:#A6ACCD;">			new</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">base</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">num</span></span>
<span class="line"><span style="color:#A6ACCD;">			base</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">new</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> new	</span><span style="color:#676E95;font-style:italic;">#返回f+sum</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sum</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#输出</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#20</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#30</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#40</span></span></code></pre></div><ul><li><p>非闭包写法</p></li><li><p>#相比于闭包写法的缺点,base可以被其他函数修改</p></li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">global</span><span style="color:#A6ACCD;"> base</span></span>
<span class="line"><span style="color:#A6ACCD;">	base</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">#相比于闭包写法的缺点,base可以被其他函数修改</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">global</span><span style="color:#A6ACCD;"> base		</span><span style="color:#676E95;font-style:italic;">#声明为全局变量</span></span>
<span class="line"><span style="color:#A6ACCD;">		new</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">base</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">num</span></span>
<span class="line"><span style="color:#A6ACCD;">		base</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">new</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> new		</span><span style="color:#676E95;font-style:italic;">#返回f+sub_f</span></span>
<span class="line"><span style="color:#A6ACCD;">	base</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#输出</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#20</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#30</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#40</span></span></code></pre></div><hr><h2 id="装饰器-相当于aop-也是闭包" tabindex="-1">装饰器(相当于AOP,也是闭包) <a class="header-anchor" href="#装饰器-相当于aop-也是闭包" aria-label="Permalink to &quot;装饰器(相当于AOP,也是闭包)&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">InjectContent</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">f</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">在被注入函数被执行 前 插入的内容</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">在被注入函数被执行 后 插入的内容</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">InjectContent</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fun_ToBe_Injected</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">被注入的函数</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	fun_ToBe_Injected</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#输出</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#在被注入函数被执行 前 插入的内容</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#被注入的函数</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#在被注入函数被执行 后 插入的内容</span></span></code></pre></div><hr><h2 id="多返回值的函数定义与获取" tabindex="-1">多返回值的函数定义与获取 <a class="header-anchor" href="#多返回值的函数定义与获取" aria-label="Permalink to &quot;多返回值的函数定义与获取&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">arg1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">arg2</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> arg1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arg2	</span><span style="color:#676E95;font-style:italic;">#返回的其实是个元组	</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	return1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">return2</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">],</span><span style="color:#82AAFF;">F</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">return1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">return2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#输出</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#1 2</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#1 2</span></span></code></pre></div><hr>`,28),t=[o];function e(c,r,y,F,D,A){return n(),a("div",null,t)}const f=s(p,[["render",e]]);export{i as __pageData,f as default};
