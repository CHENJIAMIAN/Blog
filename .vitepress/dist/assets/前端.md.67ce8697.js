import{_ as a,o as s,c as e,O as t}from"./chunks/framework.4afe7240.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端.md","filePath":"前端.md"}'),n={name:"前端.md"},p=t(`<h2 id="我有个网站-我的服务器怎么判断别人是不是通过iframe嵌入的方式来访问我网站的资源" tabindex="-1">我有个网站，我的服务器怎么判断别人是不是通过iframe嵌入的方式来访问我网站的资源 <a class="header-anchor" href="#我有个网站-我的服务器怎么判断别人是不是通过iframe嵌入的方式来访问我网站的资源" aria-label="Permalink to &quot;我有个网站，我的服务器怎么判断别人是不是通过iframe嵌入的方式来访问我网站的资源&quot;">​</a></h2><p>要判断是否通过 iframe 嵌入的方式来访问网站资源，可以通过检查请求头中的 Referer 和 X-Frame-Options 字段来实现。具体方法如下：</p><p>1.检查请求头中的 Referer 字段，如果该字段的值为空或者不是同域的，那么就可以判断这个请求是通过 iframe 嵌入的方式来访问的。。。</p><p>2.使用 X-Frame-Options 字段来限制页面是否可以被嵌入到 iframe 中。如果 X-Frame-Options 字段的值为 DENY，则表示该页面不允许被任何页面嵌入到 iframe 中；如果 X-Frame-Options 字段的值为 SAMEORIGIN，则表示该页面只能被同域页面嵌入到 iframe 中。</p><p>在 Nginx 中，可以通过配置 X-Frame-Options 来限制页面是否可以被嵌入到 iframe 中，具体方法如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">add_header X</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Frame</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Options SAMEORIGIN</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>此配置将会在 HTTP 响应头中添加 X-Frame-Options 字段，并设置其值为 SAMEORIGIN，表示该页面只能被同域页面嵌入到 iframe 中。</p><p>另外，还可以使用 JavaScript 在页面加载时检查自身是否被嵌入到 iframe 中，具体方法如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (self </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> top) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 页面被嵌入到 iframe 中</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 页面未被嵌入到 iframe 中</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>该代码中，self 表示当前页面的 window 对象，top 表示最顶层的 window 对象。如果两者不相等，则说明当前页面被嵌入到 iframe 中。</p><h2 id="浏览器如何给-script-标签请求的资源加refer" tabindex="-1">浏览器如何给&lt;script&gt;标签请求的资源加refer <a class="header-anchor" href="#浏览器如何给-script-标签请求的资源加refer" aria-label="Permalink to &quot;浏览器如何给\\&lt;script&gt;标签请求的资源加refer&quot;">​</a></h2><p>浏览器默认会为 <code>&lt;script&gt;</code> 标签发起的资源请求加上 <code>Referer</code> 头部信息，该头部信息会包含当前页面的 URL 作为请求来源。但是，如果资源是通过 HTTPS 请求的，则浏览器不会将来源信息发送给服务器，这是浏览器的安全机制。</p><p>需要注意的是，如果在页面中使用了 Content Security Policy (CSP) ，那么 CSP 中定义的规则可能会限制或禁止某些请求来源。</p>`,13),o=[p];function l(r,i,c,f,d,m){return s(),e("div",null,o)}const F=a(n,[["render",l]]);export{y as __pageData,F as default};
