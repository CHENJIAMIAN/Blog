import{_ as s,o as n,c as a,O as l}from"./chunks/framework.4afe7240.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"TS.md","filePath":"TS.md"}'),p={name:"TS.md"},o=l(`<blockquote><p>实践</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//www.typescriptlang.org/zh/play在试验场不断试错就完事了</span></span>
<span class="line"><span style="color:#A6ACCD;">有时候一个报错是无厘头的</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 不一定真有那个错</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 而是报错行上面的代码报错连带造成的</span><span style="color:#89DDFF;">!!!!!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">找不到模块“</span><span style="color:#89DDFF;">../</span><span style="color:#A6ACCD;">views</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">layout</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vue”或其相应的类型声明。</span><span style="color:#82AAFF;">ts</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2307</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    全局d</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts中加入:</span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">如何在项目实践</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">EChartOption</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">echarts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#676E95;font-style:italic;">//导入库规定的数据格式</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">{...}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EChartOption</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EChartOption</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">SeriesBar</span><span style="color:#89DDFF;">&gt;</span><span style="color:#676E95;font-style:italic;">//使用库的数据格式</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">通用解决报错</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">(XXX </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#A6ACCD;">) </span><span style="color:#82AAFF;">或</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;font-style:italic;">/*this指向全局*/</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/*解决window报错*/</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Window</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">loadMap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">map</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//给window添加对象</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">d</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//{xx} as XX表示包容地用xx包容地转成XX类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">解决Variable </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">globalString</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> is used before being assigned错误</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> globalString</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">globalString : </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">globalString</span><span style="color:#89DDFF;">!</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//用!号来表示变量还未赋值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">类型{ ... }的参数不能赋给类型“Options”的参数 对象文字可以只指定已知属性，并且“title”不在类型“Options”中。ts(2345)</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">//给对象添加它本来没有的属性:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> q1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Options</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">z</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">};</span><span style="color:#676E95;font-style:italic;">// Error, no property &#39;z&#39; in &#39;Options&#39;    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> q2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">z</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Options</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// OK   类型断言     </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">类型“any”的参数不能赋给类型“never”的参数。ts(2345)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;font-style:italic;">//报此错</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;font-style:italic;">//通过</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">document.getElementById 对象可能为 &quot;null&quot;</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//如果您从外部知道表达式不是null或undefined，则可以使用非空断言运算符!来强制删除这些类型：</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> some</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">expr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">thing</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// Error, some.expr may be null or undefined</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> some</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">expr</span><span style="color:#89DDFF;">!.</span><span style="color:#A6ACCD;">thing</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// OK</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//或者预先初始化它们:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">wrapperElement</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">An outer value of </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">this</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> is shadowed by this container.</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addInteraction</span><span style="color:#89DDFF;">(){}</span><span style="color:#A6ACCD;"> 改为 </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> addInteraction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> 即可</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">忽略错误  </span><span style="color:#676E95;font-style:italic;">// @ts-ignore</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">类型扩展</span><span style="color:#A6ACCD;">(声明合并)的基本原则 </span><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//segmentfault.com/a/1190000022842783  //如果这些声明文件包含相同的模块名称，则TypeScript编译器将合并这两个声明文件，并使用模块声明的组合版本</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//类不能与其他类或变量合并</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> 同模块：声明合并只能在同一个模块中进行</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> 同路径：声明的模块路径必须与目标类型（你将要扩展的类型）的原始声明文件路径保持一致</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> 同书写方式：声明书写方式必须与目标类型一致     </span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">eg</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">fnWithProperty</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> fnWithProperty</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            对应d</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts声明:</span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fnWithProperty</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">);</span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">fnWithProperty</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> OuterName</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">InnerName</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NestedClass</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            对应d</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts声明:</span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OuterName</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#C792EA;">module</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">InnerName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">NestedClass</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}}}</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">   模块扩充 </span><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//vuejs.org/guide/typescript/options-api.html#augmenting-global-properties</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">/有顶级import或export的话</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">该d.ts会被作为模块编译</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 以此实现模块扩充</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 否则</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">该d.ts会被作为全局声明编译</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">会重写覆盖原来的类型/</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//扩展模块只能在模块中声明。也就是说，如果再全局声明中使用declare module，会被识别为对这个模块的整体声明，直接覆盖原本的声明</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ComponentCustomProperties</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//扩充vue的实例上挂的对象}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>TS是JS的超集</p></blockquote><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">同名</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts             </span><span style="color:#676E95;font-style:italic;">//是 TypeScript 文件的后缀  </span></span>
<span class="line"><span style="color:#A6ACCD;">同名</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts           </span><span style="color:#676E95;font-style:italic;">//DefinitelyTyped 用于给非ts的库添加语法提示,骗编译器 , 仅仅会用于编译时的检查 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//ts3.7中可以利用 JSDoc 语法从 js 生成 .d.ts 文件</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SomeThing</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./some-module.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//TypeScript 3.8 为仅类型导入和导出添加了新语法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">tsconfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json</span><span style="color:#676E95;font-style:italic;">//告诉ts它应该ts文件们在哪</span></span>
<span class="line"><span style="color:#A6ACCD;">    路径包含 </span><span style="color:#676E95;font-style:italic;">//编译器将尝试使用适当的路径查找a.ts, a.tsx然后是a.d.ts如果找不到特定文件，则编译器将查找环境模块声明</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//假如仍然无法解析，那么可以检查下 tsconfig.json 中的 files、include 和 exclude 配置</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#FFCB6B;">方式1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">files</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./some/file.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#FFCB6B;">方式2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">include</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./folder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./folder/**/*.spec.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./folder/someSubFolder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//单纯执行tsc命令,编译器会逐级向上搜索父目录查找tsconfig.json文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">include</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/**/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//默认值为[&quot;**/*&quot;]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">**/*.spec.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]  </span><span style="color:#676E95;font-style:italic;">//默认值[&quot;node_modules&quot;, &quot;bower_components&quot;, &quot;jspm_packages&quot;, &quot;dist&quot;]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">strictNullChecks</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">; </span><span style="color:#676E95;font-style:italic;">//这样let y: number | null;  y = undefined;报错;</span></span>
<span class="line"><span style="color:#A6ACCD;">        noImplicitAny:</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">; </span><span style="color:#676E95;font-style:italic;">//declare function testImplicitAny();报错;declare function testImplicitAny() : void;不报错;</span></span>
<span class="line"><span style="color:#A6ACCD;">        allowJs: </span><span style="color:#FF9CAC;">true</span><span style="color:#676E95;font-style:italic;">///扩展名可以是 .js/.jsx</span></span>
<span class="line"><span style="color:#A6ACCD;">        具体看: https:</span><span style="color:#676E95;font-style:italic;">//jkchao.github.io/typescript-book-chinese/project/compilationContext.html#%E7%BC%96%E8%AF%91%E9%80%89%E9%A1%B9</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">baseUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//baseUrl: 用来设置下面 path 路径的根路径。</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//path: 用来设置相对应的路径映射，数组中的路径相对应 baseUrl 的路径。</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">@/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./src/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">@srcTypes/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/types/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">/别名/</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">@utils/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/utils/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">TypeScript 将不会把它编译成任何代码</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 只是用来表述一个其他地方已经存在的代码</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 可以放在 </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts 或者 </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts 里</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">三斜线指令</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 早期版本现在不推荐了</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">reference path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node.d.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span><span style="color:#A6ACCD;"> 仅在其包含文件的顶部有效</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">声明文件的模块的声明在哪里</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">在全局变量的声明文件d.ts中，是不允许出现 import, export 关键字的。一旦出现了，那么他就会被视为一个 npm 包或 UMD 库，就不再是全局变量的声明文件了</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">   所以</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> d</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts中，出现在顶层的import</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">export</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">就必须用三斜线指令了</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> global 扩展全局变量</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">扩展模块</span><span style="color:#A6ACCD;">,/</span><span style="color:#FFCB6B;">是可以被import等导入的</span><span style="color:#A6ACCD;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;">/function/class/enum</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">声明</span><span style="color:#A6ACCD;">（</span><span style="color:#FFCB6B;">含有子属性的</span><span style="color:#A6ACCD;">）</span><span style="color:#FFCB6B;">全局对象</span><span style="color:#676E95;font-style:italic;">//随着 ES6 的广泛应用，现已经不建议使用 ts 中的 namespace，而推荐使用 ES6 模块化方案，但在声明文件中，declare namespace 还是比较常用的</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">和</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">声明全局类型</span></span>
<span class="line"><span style="color:#A6ACCD;">    /</span><span style="color:#FFCB6B;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">interface和interface之间没有区别</span><span style="color:#A6ACCD;">/,</span><span style="color:#FFCB6B;">因为</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">接口没有代码生成</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">它们只存在于Typescript中的接口本质上是声明</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">偷懒用速记模块</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">module</span><span style="color:#A6ACCD;"> &quot;</span><span style="color:#FFCB6B;">hot</span><span style="color:#A6ACCD;">-</span><span style="color:#FFCB6B;">new</span><span style="color:#A6ACCD;">-</span><span style="color:#FFCB6B;">module</span><span style="color:#A6ACCD;">&quot;; </span><span style="color:#FFCB6B;">仅解决报错</span><span style="color:#A6ACCD;">,</span><span style="color:#FFCB6B;">没有代码提示作用</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">来自速记模块的所有导入都将具有该any类型</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">export</span><span style="color:#A6ACCD;"> , </span><span style="color:#FFCB6B;">使用</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">先声明多个变量</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">最后再用</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">一次性导出</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">导出</span><span style="color:#A6ACCD;">（</span><span style="color:#FFCB6B;">含有子属性的</span><span style="color:#A6ACCD;">）</span><span style="color:#FFCB6B;">对象</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ES6</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">默认导出</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">export</span><span style="color:#A6ACCD;"> = </span><span style="color:#FFCB6B;">commonjs</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">导出模块</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">既可以通过</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#FFCB6B;">标签引入</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">又可以通过import导入的库</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">称为UMD库</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">需要局部变量声明为全局变量</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">声明合并</span><span style="color:#A6ACCD;">/</span><span style="color:#FFCB6B;">扩展</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">TypeScript</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">有两种模块类型声明</span><span style="color:#A6ACCD;">：</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">本地</span><span style="color:#A6ACCD;">（</span><span style="color:#FFCB6B;">普通模块</span><span style="color:#A6ACCD;">）</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">环境</span><span style="color:#A6ACCD;">（</span><span style="color:#FFCB6B;">全局</span><span style="color:#A6ACCD;">）</span><span style="color:#676E95;font-style:italic;">///允许编写与现有模块 声明合并 的全局模块声明。        </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">d</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">ts仅当文件没有任何导入时</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">文件才被视为环境模块声明</span><span style="color:#A6ACCD;">,/</span><span style="color:#FFCB6B;">如果您提供一个import行</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">它现在被视为一个普通的模块文件</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">而不是全局的</span><span style="color:#A6ACCD;"> ,</span><span style="color:#FFCB6B;">所以增加模块定义不起作用</span><span style="color:#A6ACCD;">。/</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#FFCB6B;">Q</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">那全局模块声明要怎么导入才不会被视为普通模块</span><span style="color:#A6ACCD;">?  </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#FFCB6B;">A</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">从</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TS</span><span style="color:#A6ACCD;"> 2.9 </span><span style="color:#FFCB6B;">开始</span><span style="color:#A6ACCD;">，</span><span style="color:#FFCB6B;">我们可以使用import</span><span style="color:#A6ACCD;">()</span><span style="color:#FFCB6B;">语法将类型导入</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">src</span><span style="color:#A6ACCD;">/</span><span style="color:#FFCB6B;">shims</span><span style="color:#A6ACCD;">-</span><span style="color:#FFCB6B;">vue</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">d</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">ts</span><span style="color:#A6ACCD;"> ,/</span><span style="color:#FFCB6B;">被</span><span style="color:#A6ACCD;">@</span><span style="color:#FFCB6B;">vue_cli</span><span style="color:#A6ACCD;">-</span><span style="color:#FFCB6B;">plugin</span><span style="color:#A6ACCD;">-</span><span style="color:#FFCB6B;">typescript使用</span><span style="color:#A6ACCD;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">module</span><span style="color:#A6ACCD;"> &#39;*.</span><span style="color:#FFCB6B;">vue</span><span style="color:#A6ACCD;">&#39; </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//这样import *.vue的时候获得的是这里导出的Vue</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue/types/vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//&#39;vue/types/vue&#39;是路径, 会声明合并</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Vue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">$myProperty</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//让ts知道我再vue的属性上有定义vue.$myProperty这个,会顺利编译通过      }</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">interface</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VueConstructor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">$myGlobal</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;">//Vue.$myGlobal</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">        </span></span>
<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">type适合业务代码,interface适合类库, 差不多</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//规定对象的数据结构</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  [</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;}</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//通用匹配</span></span>
<span class="line"><span style="color:#F07178;">                   </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">length</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">casdf</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;">//这样也是通过的</span></span>
<span class="line"><span style="color:#F07178;">       </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//使用 type 创建string的别名</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">EventNames</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scroll</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mousemove</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//联合类型(Union Types) ,能取三种字符串中的一种</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">泛型</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//泛型方法,泛型常用 T、U、V 表示。泛型还可以自己起名称,通常以 T 作为泛型名称的前缀</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GenericsFunc</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//调用: GenericsFunc&lt;string&gt;(3, &#39;x&#39;);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//&lt;string&gt; 表示用string替换所有的T,变成:  let result: string[] = []; //这样result肯定是字符串数组了</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">extends</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">numberOrString</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">extends</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//传入&lt;number&gt;的话,它就是number,否则它就是string  //T extends number表示它T是否有一个number属性</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pickAbObject</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">numberOrString</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//错误, 因为 numberOrString&lt;number&gt;等同于 number</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">infer</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">X</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">某某变量</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 提取某某变量里的所有值作为类型, 赋值给X            </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">InferredAb</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">extends</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">infer</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">infer</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//U的值是传入的a，U的值是传入的b</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">asdf</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">InferredAb</span><span style="color:#89DDFF;">&lt;{</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">234</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//报错Type &#39;12&#39; is not assignable to type &#39;123 | 234&#39;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">等同于</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">234</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">asdf</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">            </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">234</span><span style="color:#F07178;">           </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">extractArrayType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">extends</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">infer</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#F07178;">)[] </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">never</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//T是个数组, 推断出数组的类型们赋值给U</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stringType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">extractArrayType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//报错Type &#39;&quot;test3&quot;&#39; is not assignable to type &#39;&quot;test1&quot; | 1&#39;.   </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">它等同</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stringType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">         </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// U是 &quot;test1&quot; | 1</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">keyof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">频率16</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">PartialProps</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">[</span><span style="color:#FFCB6B;">K</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">in</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">keyof</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;">[</span><span style="color:#FFCB6B;">K</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;}</span><span style="color:#676E95;font-style:italic;">//T传入的是键值对象</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">PartialProps</span><span style="color:#89DDFF;">&lt;{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">;}&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> c</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">d</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">};</span><span style="color:#676E95;font-style:italic;">//d:1会造成错误</span></span>
<span class="line"><span style="color:#F07178;">        </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">keyof</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">IPerson</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#676E95;font-style:italic;">//keyof 顾名思义</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">实用程序类型</span><span style="color:#676E95;font-style:italic;">//vite项目中的使用频率如下</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//定义位于D:/Users/86159/AppData/Local/Programs/Microsoft VS Code/resources/app/extensions/node_modules/typescript/lib/lib.es5.d.ts</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">104</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Keys</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//概括对象键值对</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">表示</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">b</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">recordAcNumbers</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> c</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//表示a和c都要用到,且都得是string   //a:1会报错</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">9</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Omit</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Keys</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">NonNullable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Partial</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//用来创建类型的所有属性 T 都是可选的</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ReturnType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Parameters</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Exclude</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">UnionType</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ExcludedMembers</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ThisType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Required</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Readonly</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//创建类型的所有属性 T 都是只读的</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ThisParameterType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Pick</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Keys</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">Pick</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;{</span><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">c</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">boolean</span><span style="color:#89DDFF;">;},</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//表示a和b都要用到，但不能用c</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pickAbObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Pick</span><span style="color:#89DDFF;">&lt;{</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">;},</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//c:true会造成错误</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">OmitThisParameter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">InstanceType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Extract</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Union</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ConstructorParameters</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//等同于 b: number|undefined;</span></span>
<span class="line"><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">的作用</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;font-style:italic;">first</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">second</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//assdf同时拥有类型T和类型U的成员</span></span>
<span class="line"><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">as</span><span style="color:#676E95;font-style:italic;">//是ts的关键字,用来限制类型</span></span>
<span class="line"><span style="color:#F07178;">     </span></span>
<span class="line"><span style="color:#F78C6C;">0x00_FF_00</span><span style="color:#89DDFF;">===</span><span style="color:#F78C6C;">65280</span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">never</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">unknown</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">never</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//关键字来指示该函数将永远不会返回值, 更实际的用法是捕获bug:</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//在switch 语句之后，我们定义一个名为 returnValue ，类型 为的值 never ，并将传入的 value参数分配给它:</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">returnValue</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">never</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//这样传入switch的case如果不存在的话就会在这里报错&#39;*** is not assignable to type &#39;never&#39;&#39;</span></span>
<span class="line"><span style="color:#F07178;">                </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">unknown</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//等同 any , 更安全 let unknownType: unknown = 1;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">numberType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">numberType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">unknownType</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//会报错,需要&lt;number&gt;unknownType把unknown转成number才行,这是与any的区别, 如果unknownType是any而不是unknown,这句就不会报错</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">元组</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tupleType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//元组,赋值时都要赋到,否则会报错</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">tupleType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//通过</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">tupleType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//报错</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">optionalTuple</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">?</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//第二个参数可选的元组</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">RestTupleType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#FFCB6B;">string</span><span style="color:#F07178;">[]]</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//...string[] 表示很多个string</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">restTuple</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">RestTupleType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">arg1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">arg2</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">restTuple</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//arg1是1,arg2是数组[&quot;string1&quot;, &quot;string2&quot;, &quot;string3&quot;]</span></span>
<span class="line"><span style="color:#F07178;">        </span></span>
<span class="line"><span style="color:#FFCB6B;">overrides函数</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">类</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">classWithAutomaticProperties</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">protected</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//不会被子类继承的</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">private</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//自动属性:自动转为this.id=id; this.name=name;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">super</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">_id</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//super是父类的constructor</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;">//let myAutoClass = new classWithAutomaticProperties(1, &quot;className&quot;); myAutoClass.id就可以访问到1了</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">constructor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">public</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">firstName</span><span style="color:#F07178;">)</span><span style="color:#676E95;font-style:italic;">//等同于 this.firstName = firstName;的简写</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">抽象类</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//必须让子类各自去实现</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">abstract</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">AbstractEmployee</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">abstract</span><span style="color:#F07178;"> getDetails</span><span style="color:#89DDFF;">():</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//抽象类中的抽象方法</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> printDetails</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">getDetails</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Promise写法</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">delayedPromise</span><span style="color:#89DDFF;">():</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">resolve</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reject</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">              </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;}</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">        )</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//或者带参数:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">resolve</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">reject</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">resolved_within_promise</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#F07178;">        )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F78C6C;">1038</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//我们将基础类型叫做T，复合类型叫做Comp&lt;T&gt;</span></span>
<span class="line"><span style="color:#82AAFF;">协变</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Covariant</span><span style="color:#F07178;">)：</span><span style="color:#A6ACCD;">协变表示Comp</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">类型兼容和T的一致</span><span style="color:#F07178;">。</span><span style="color:#A6ACCD;">是类型兼容性</span></span>
<span class="line"><span style="color:#82AAFF;">逆变</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Contravariant</span><span style="color:#F07178;">)：</span><span style="color:#A6ACCD;">逆变表示Comp</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">类型兼容和T相反</span><span style="color:#F07178;">。</span><span style="color:#A6ACCD;">只会在一个函数赋值给另一个函数时</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">在函数类型中的函数参数上出现</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">例如</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">NoOrStr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">type</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">No</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">noOrStr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">NoOrStr</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">no</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">No</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">noOrStr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">no</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//会报错! Type &#39;(a: No) =&gt; void&#39; is not assignable to type &#39;(a: NoOrStr) =&gt; void&#39;.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//双向协变 (Bivariant)：双向协变表示Comp&lt;T&gt;类型与T类型双向兼容。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//不变 (Invariant)：不变表示Comp&lt;T&gt;类型与T类型双向都不兼容。</span></span></code></pre></div><blockquote><p>装饰器</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">装饰器</span><span style="color:#A6ACCD;">(工厂函数)</span><span style="color:#676E95;font-style:italic;">//在运行时(与编译时区分)修改类以注入所需的依赖项,(在声明被装饰的对象前被调用) </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">装饰Class的</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">simpleDecorator </span><span style="color:#FFCB6B;">声明</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">simpleDecorator</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">constructor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">simpleDecorator called.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">constructor</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">为</span><span style="color:#676E95;font-style:italic;">//class ImportedClassName {}</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">constructor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name为</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//ImportedClassName</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">constructor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">testProperty</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">testProperty_value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//实例importedClassName1.testProperty为testProperty_value</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">simpleDecorator</span><span style="color:#676E95;font-style:italic;">//后被调用</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">secondDecorator</span><span style="color:#676E95;font-style:italic;">//先被调用</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ClassWithMultipleDecorators</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">decoratorFactory</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">testName</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;font-style:italic;">//带括号的声明:function decoratorFactory(name: string) { return function (constructor: Function) { console.log(\`decorator function called with : \${name}\`); }}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">装饰Class属性的</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">propertyDec</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">propertyKey</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">constructor</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">constructor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">propertyKey</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ClassWithPropertyDec</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">propertyDec </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">            target  </span><span style="color:#676E95;font-style:italic;">//Object{constructor: class ClassWithPropertyDec}</span></span>
<span class="line"><span style="color:#A6ACCD;">            target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">constructor  </span><span style="color:#676E95;font-style:italic;">//class ClassWithPropertyDec {}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//ClassWithPropertyDec</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">propertyKey</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//name    </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StaticClassWithPropertyDec</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">propertyDec </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">aname</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;}</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">            target </span><span style="color:#676E95;font-style:italic;">//class StaticClassWithPropertyDec {}</span></span>
<span class="line"><span style="color:#A6ACCD;">            target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">constructor </span><span style="color:#676E95;font-style:italic;">//function Function() { [native code] }</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//StaticClassWithPropertyDec</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">propertyKey</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//aname</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">装饰Method的</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">methodDec</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">target</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">any</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">methodName</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">descriptor</span><span style="color:#A6ACCD;">?: </span><span style="color:#FFCB6B;">PropertyDescriptor</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//descriptor是Object.defineProperty的描述符</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">装饰Params的</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parameterDec</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">methodName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">parameterIndex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">元数据装饰器</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reflect-metadata</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//反射出被装饰的方法的参数,返回值等</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">metadataParameterDec</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">methodName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">parameterIndex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">designType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Reflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMetadata</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">design:type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">methodName</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">designParamTypes</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Reflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMetadata</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">design:paramtypes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">methodName</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">designReturnType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Reflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMetadata</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">design:returntype</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">methodName</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ClassWithMetaData</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">print</span><span style="color:#89DDFF;">(@</span><span style="color:#A6ACCD;">metadataParameterDec </span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">;}}</span></span></code></pre></div><hr><blockquote><p>ESLint</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">root</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//ESLint 一旦发现配置文件中有 &quot;root&quot;: true，它就会停止在父级目录中寻找</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">babel-eslint</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//一个对Babel解析器的包装，使其能够与 ESLint 兼容</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">ecmaVersion</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//使用ES9</span></span>
<span class="line"><span style="color:#A6ACCD;">                     </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">babel-eslint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">/没有加的话会出莫名其妙的错误eslint的错误提示极不友好/</span></span>
<span class="line"><span style="color:#A6ACCD;">                     </span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&#39;</span><span style="color:#676E95;font-style:italic;">//如果你的代码是 ECMAScript 模块 }</span></span>
<span class="line"><span style="color:#A6ACCD;">    env: </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#676E95;font-style:italic;">//指定环境</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">extends</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [ </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">standard</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//继承规则,优先使用后面的, 需要npm install对应的\`eslint-config-\${plugin}\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [ </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">import</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//插件可以提供处理器从非.js类型文件中提取JS代码(或者预处理js代码)，</span></span>
<span class="line"><span style="color:#89DDFF;">                                    </span><span style="color:#676E95;font-style:italic;">//然后让 ESLint 检测JS代码,需要npm install对应的\`eslint-plugin-\${plugin}\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//Rules - 启用的规则及其各自的错误级别</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">brace-style</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 关闭else必须在大括号后面</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//&quot;off&quot; 或 0 或[&quot;off&quot;] - 关闭规则</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//&quot;warn&quot; 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//&quot;error&quot; 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)            </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">root</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">parserOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">parser</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">babel-eslint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">plugin:vue/recommended</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">prettier/prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">comma-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">first</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">exceptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">ArrayExpression</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">ObjectExpression</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">comma-dangle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">loader报错过程</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">createFileDiagnostic</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">createDiagnosticForNodeInSourceFile</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">createDiagnosticForNode</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">createError</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">error</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">resolveExternalModule</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">resolveExternalModuleNameWorker</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">resolveExternalModuleName</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">getTargetOfImportClause</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">getTargetOfAliasDeclaration</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">resolveAlias</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkAliasSymbol</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkImportBinding</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkImportDeclaration</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkSourceElementWorker</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkSourceElement</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkSourceFileWorker</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkSourceFile</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">checkSourceFileWithEagerDiagnostics</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">getDiagnosticsWorker</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">getDiagnostics</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">getEmitResolver</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">emitWorker</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">anonymous</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> (typescript\\lib\\typescript.js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    runWithCancellationToken (typescript\\lib\\typescript.js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    emit (typescript\\lib\\typescript.js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    getEmitOutput (ts-loader\\dist\\instances.js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    getEmit (ts-loader\\dist\\index.js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    successLoader (ts-loader\\dist\\index.js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    loader (ts-loader\\dist\\index.js)</span></span></code></pre></div>`,10),t=[o];function e(c,r,y,F,D,C){return n(),a("div",null,t)}const B=s(p,[["render",e]]);export{i as __pageData,B as default};
