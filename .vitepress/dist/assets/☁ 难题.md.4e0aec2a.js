import{_ as s,o as n,c as a,O as l}from"./chunks/framework.4afe7240.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"☁ 难题.md","filePath":"☁ 难题.md"}'),p={name:"☁ 难题.md"},o=l(`<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 项目</span></span>
<span class="line"><span style="color:#A6ACCD;">  # </span><span style="color:#82AAFF;">最大的挑战</span><span style="color:#A6ACCD;">(难点)</span></span>
<span class="line"><span style="color:#A6ACCD;">  # 坑 </span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">  # 痛点与改进 </span><span style="color:#676E95;font-style:italic;">//重构成单页加iframe,eslint编码规范</span></span>
<span class="line"><span style="color:#A6ACCD;">  # 性能优化</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">封装什么组件</span><span style="color:#89DDFF;">?</span></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">vue</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">cli用tailwindcss不生效</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">(耗时半天)</span></span>
<span class="line"><span style="color:#A6ACCD;">    npx tailwindcss init </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">p #自动生成postcss</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js和tailwind</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js</span></span>
<span class="line"><span style="color:#A6ACCD;">    vue</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">cli配置文件不用改</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">会自动读取postcss</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js</span></span>
<span class="line"><span style="color:#A6ACCD;">    tailwind</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js里content路径匹配要包含</span><span style="color:#89DDFF;">*.</span><span style="color:#A6ACCD;">vue格式的文件</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//以上三点齐全,还不生效,考虑是webpack5持久化缓存的问题 ? 因为有时不进postcss.config.js和tailwind.config.js的断点</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">低版本浏览器支持</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">at</span><span style="color:#A6ACCD;">()等新语法 vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js babel</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">js</span><span style="color:#A6ACCD;"> (耗时半天)</span></span>
<span class="line"><span style="color:#A6ACCD;">    升级core</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">js最新才支持array</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">at语法</span></span>
<span class="line"><span style="color:#A6ACCD;">    vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js 中的 transpileDependencies</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">[去包含</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">使用了新语法的依赖包</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">verdaccio代理npm为什么配置淘宝镜像无效？（耗时1天）</span></span>
<span class="line"><span style="color:#A6ACCD;">    从http请求源头（request库）追踪源码可知，是读取了store中央缓存目录的 包名</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">package</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json 去请求获取包的，它是旧的，删了让它重新被生成即可</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">exports</span><span style="color:#A6ACCD;"> is not </span><span style="color:#82AAFF;">defined</span><span style="color:#A6ACCD;">(耗时2天)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">antv</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">g6里的某个子包的语句import xx from </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@babel/runtime/xxx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">报错</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">原因</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 使用了@babel</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">plugin</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">transform</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">modules</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">commonjs</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> webpack把某包作为esmodule去准备解析</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        谁知解析的时候代码已经被babel这个插件转换为commonjs语法了</span></span>
<span class="line"><span style="color:#89DDFF;">         </span><span style="color:#676E95;font-style:italic;">//参考https://github.com/natsu0728/blog/issues/22</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">解决</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">某条import改为require</span><span style="color:#A6ACCD;">()导入一遍</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">webpack就记住了</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">关闭浏览器则重新登录</span></span>
<span class="line"><span style="color:#A6ACCD;">    sessionStorage只属于该标签，并且在浏览器关闭后消失，所以利用它存关闭标志，检测到关闭标志则跳转登录</span></span>
<span class="line"><span style="color:#A6ACCD;">    利用SharedWorker在标签之间同步关闭标志，</span><span style="color:#82AAFF;">所有标签不断地向SharedWorker发同步标志</span><span style="color:#A6ACCD;">(如果存在)</span></span>
<span class="line"><span style="color:#A6ACCD;">    所有标签都接收SharedWorker转发的标志，这样让新打开的标签也同步到标志</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//github.com/CHENJIAMIAN/shared-worker.git</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">为什么babel的babel</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">plugin</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">lodash插件报Cannot read property </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">has</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined?</span><span style="color:#A6ACCD;">(耗时8h)</span></span>
<span class="line"><span style="color:#A6ACCD;">    因为其依赖的glob更新后v7</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">v7</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2.2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> common</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js加入了options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">allowWindowsEscape </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#676E95;font-style:italic;">/*始终将模式中的 \\ 视为转义，而不是路径分隔符*/</span></span>
<span class="line"><span style="color:#A6ACCD;">    用来匹配分割传入的pattern即 </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Minimatch</span><span style="color:#A6ACCD;">(pattern</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options)就分割不到正确路径了</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">7.2</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">        glob的self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">minimatch</span><span style="color:#89DDFF;">=new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Minimatch</span><span style="color:#A6ACCD;">(pattern</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options) </span><span style="color:#676E95;font-style:italic;">//self.minimatch=(7)[&#39;D:&#39;, &#39;Desktop&#39;, &#39;bk-saas-frontend-template&#39;, &#39;node_modules&#39;, &#39;_lodash@4.17.21@lodash&#39;, {…}, &#39;&#39;]</span></span>
<span class="line"><span style="color:#A6ACCD;">            options</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">ignore</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">D:</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">Desktop</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">bk-saas-frontend-template</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">node_modules</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">_lodash@4.17.21@lodash</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">node_modules</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">**</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">nonegate</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">nocomment</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">pattern</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">D:</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">Desktop</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">bk-saas-frontend-template</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">node_modules</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">_lodash@4.17.21@lodash</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">**</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">7.2</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">        glob的self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">minimatch</span><span style="color:#89DDFF;">=new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Minimatch</span><span style="color:#A6ACCD;">(pattern</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options) </span><span style="color:#676E95;font-style:italic;">// self.minimatch=(1)[/^(?=.)D:Desktopasdfbk-saas-frontend-templatenode_modules_lodash\\\\@4\\\\.17\\\\.21\\\\@lodash\\\\*[^/]*?\\\\\\\\$/]</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">options</span><span style="color:#89DDFF;">:{</span><span style="color:#FFCB6B;">ignore</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">D:</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">Desktop</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">asdf</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">bk-saas-frontend-template</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">nod…ules</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">_lodash@4.17.21@lodash</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">node_modules</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">**</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">nonegate</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">nocomment</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">allowWindowsEscape</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">pattern</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">D:</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">Desktop</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">asdf</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">bk-saas-frontend-template</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">node_modules</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">_lodash@4.17.21@lodash</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">**</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    获取不到node_modules的lodash下的目录了</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">为什么没有HMR自动刷新</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> (耗时2天) n </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//bk-cli是否可以代替我改造bk的前端? (只有webpack4的版本,也就是多云前端正在用的)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//原生的master有吗? 是不是被我改坏了?  (master也没有!)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 禁用hot以启用liveReload也不行</span></span>
<span class="line"><span style="color:#A6ACCD;">    自己搞一个webpack最精简版去调试</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">暂时找不出原因</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 先手动刷新吧</span></span>
<span class="line"><span style="color:#A6ACCD;">    resolve</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">symlinks</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//造成hot失败</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//https://cli.vuejs.org/guide/troubleshooting.html#symbolic-links-in-node-modules</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//Disabling resolve.symlinks may break hot module reloading if your dependencies are installed by third-party npm clients that utilized symbolic links, such ascnpm or pnpm.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">axios </span><span style="color:#F78C6C;">302</span><span style="color:#A6ACCD;"> get 异步</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 造成CORS没有成功跳转 2022年4月25日</span></span>
<span class="line"><span style="color:#A6ACCD;">    深入源码</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> adapter的onerror发现注释</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 处理低级网络错误, 真正的错误被浏览器隐藏起来，只有浏览器网络错误时，onerror才应该触发    </span></span>
<span class="line"><span style="color:#A6ACCD;">        Ajax 不能处理 </span><span style="color:#F78C6C;">302</span><span style="color:#A6ACCD;"> 状态码的响应，这个行为是浏览器的默认行为</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 改成401给我    </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">table tag联动问题</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 父子都维护自己的selected</span></span>
<span class="line"><span style="color:#A6ACCD;">    子组件自己维护一个selected</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">它在显示的时候跟父传进来的同步</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 关闭的时候一下更新父组件的selected</span></span>
<span class="line"><span style="color:#A6ACCD;">    子组件自己内部tag跟table选择联动</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 关闭tag跟点击取消选择联动</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 统一让点击取消选择去处理</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">升级框架</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">改用webpack5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">40s</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F78C6C;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">lint</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">staged基于 husky，用来在 git 暂存文件上筛选运行命令</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 如可筛选完运行格式化命令</span><span style="color:#676E95;font-style:italic;">//husky能够让开发者使用 git hook 的操作。</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//Husky 支持所有 Git 钩子. git支持17个hooks</span></span>
<span class="line"><span style="color:#A6ACCD;">    husky 原理 </span></span>
<span class="line"><span style="color:#A6ACCD;">        npx husky install时</span></span>
<span class="line"><span style="color:#A6ACCD;">        git config core</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hooksPath 配置到 </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">husky，这样在 git commit 前就会触发 </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">husky</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">pre</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">commit，</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">从而执行里面的脚本</span><span style="color:#A6ACCD;">(由npx husky add </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">husky</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">pre</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">commit </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx lint-staged</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">生成)</span></span>
<span class="line"><span style="color:#A6ACCD;">    为了让其他人在此项目中安装依赖后也能自动创建</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">husky目录并指定该目录为 git hooks 所在的目录，</span></span>
<span class="line"><span style="color:#A6ACCD;">        我们需要在 package</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json 里面添加一条脚本</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">husky install</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        prepare 脚本会在 npm i或者其他yarn or yarn add 之后自动执行。也就是说当我们安装依赖后会自动执行 husky install 命令，从而自动创建</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">husky目录并指定该目录为 git hooks 所在的目录。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">实现路由的自动注册</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> requireComponent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> require</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">context</span><span style="color:#A6ACCD;">(目录</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">递归</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">正则)</span><span style="color:#676E95;font-style:italic;">//获取路径们</span></span>
<span class="line"><span style="color:#A6ACCD;">     requireComponent</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#A6ACCD;">()</span><span style="color:#676E95;font-style:italic;">//获得路径们</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#82AAFF;">requireComponent</span><span style="color:#A6ACCD;">(路径)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">default </span><span style="color:#676E95;font-style:italic;">//获取文件的模块导出     </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">表单分步验证</span></span>
<span class="line"><span style="color:#A6ACCD;">    表单验证方法回调用每个表单项自己的验证方法</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 在rules加一个step标识</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 复用重写表单validate方法</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> form-item实例 </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> 筛选后的form</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">item实例们)</span></span>
<span class="line"><span style="color:#A6ACCD;">            form</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">item实例</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">validate</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">两个radio</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">group互相影响</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    radio以name相同的为一组</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">而组件源码里name根据时间戳生成</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">太快了可能会生成相同的时间戳</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Number</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#F07178;"> () </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">seed</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">now</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">now</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">bk_radio_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">now</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">seed</span><span style="color:#89DDFF;">++</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">深度监听对象属性</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 新旧值相同</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">在变更</span><span style="color:#A6ACCD;">(不是替换)对象或数组时</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">旧值将与新值相同</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">因为它们的引用指向同一 个对象</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">数组。Vue 不会保留变更之前值的副本。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">解决</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> computed监听复制一份该对象</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 再watch复制的对象即可</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">因为每次变化都会被复制一份</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">所以每次是不同的引用</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">能达到对比的目的</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">魔改组件库表组件以全局支持cell数据为空时</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 自动默认值</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 原理是改组件方法添加默认的formatter</span></span>
<span class="line"><span style="color:#A6ACCD;">    bkMagicVue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">bkTable</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">computed</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">columns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">store</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">states</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">columns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">formatter</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">formatter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">row</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">column</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">cellValue</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">null,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">cellValue</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">--</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cellValue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">store</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">states</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">columns</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Threejs 解决outlinepass边缘发光被遮挡</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  unrealbloom辉光效果变黑 的难题</span></span>
<span class="line"><span style="color:#A6ACCD;">    1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">outlinepass会被前面的机柜遮挡解决:</span></span>
<span class="line"><span style="color:#A6ACCD;">        利用片段着色器原理</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 这个自写一个片段着色器添加到ShaderPass来解决</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">原理</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">黑色与黑色相叠加</span><span style="color:#A6ACCD;">(相乘)什么都没有改变</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">所以要互不影响的物体如机柜</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">辉光等就都要变黑</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        供ShaderPass使用的bloomComposer的renderToScreen要设为false不渲染到屏幕</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        然后bloomComposer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">()一下</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ShaderPass就可以从bloomComposer拿到它的bloomTexture</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> finalPass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ShaderPass</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> THREE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShaderMaterial</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">uniforms</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">baseTexture</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">bloomTexture</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> bloomComposer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">renderTarget2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">texture</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">vertexShader</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> composer_topbloomtexture_vertex</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">fragmentShader</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> composer_topbloomtexture_fragment</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                                </span><span style="color:#676E95;font-style:italic;">//gl_FragColor =  texture2D( baseTexture, vUv ) + texture2D( bloomTexture, vUv ) ;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">defines</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">baseTexture</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">        )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">因为pass共存机柜变得更亮或特效发黑的问题</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">机柜变得更亮解决</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> outlinepass发光的物体本身也要变黑</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">不然亮</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">亮</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">更亮</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">特效发黑的解决</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 使物体变黑时要排除特效物体</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 排除前特效物体的黑</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">半透明 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> 半透明带点黑</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 排除后半透明</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">半透明</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">更炫酷</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">为什么push后嵌套路由的上一级组件会重载</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> 不是会复用的吗</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#A6ACCD;">    问题</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 进入嵌套路由下的表格</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">列表</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> 路由改变</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> 父组件重载</span></span>
<span class="line"><span style="color:#A6ACCD;">    正常应该会复用</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 不要优先怀疑是vue的bug</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 所以可能是我加了什么造成$route变</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">组件也变</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">最后发现是router</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">view上加了</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">route.path</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">生成骨架屏</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 自动根据页面的接口的isLoading的变化显示隐藏</span></span>
<span class="line"><span style="color:#A6ACCD;">    DFS vm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$children</span></span>
<span class="line"><span style="color:#A6ACCD;">        DFS vm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_vnode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#A6ACCD;">            vnode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">directives找出bkloading的key名</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> vm[key名]取值</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 只有大于0个true则loadingFLAG为true</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#A6ACCD;">axios取消请求</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">自动取消上个类似请求</span><span style="color:#A6ACCD;">(每个请求搞一个根据请求方法路径参数生成的id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 搞一个队列存放</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 进来相似的就取消上一个)</span></span>
<span class="line"><span style="color:#A6ACCD;">    1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">最新:</span></span>
<span class="line"><span style="color:#A6ACCD;">    axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user/12345</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">     </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">signal</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">signal</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">thrown</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isCancel</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">thrown</span><span style="color:#F07178;">))    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abort</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// the message parameter is not supported</span></span>
<span class="line"><span style="color:#A6ACCD;">    2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">或</span></span>
<span class="line"><span style="color:#A6ACCD;">    axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user/12345</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">cancelToken</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CancelToken</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">excutor</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#A6ACCD;">cancelExcutor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">excutor</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">cancelExcutor</span><span style="color:#A6ACCD;">()</span><span style="color:#676E95;font-style:italic;">//取消     </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">或</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> source </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> axios</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CancelToken</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user/12345</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#F07178;">cancelToken</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> source</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">token</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    source</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cancel</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Operation canceled by the user.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,2),e=[o];function t(c,r,D,y,C,F){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{i as __pageData,u as default};
