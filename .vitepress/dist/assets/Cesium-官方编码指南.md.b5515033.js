import{_ as s,o as a,c as n,O as l}from"./chunks/framework.4afe7240.js";const A=JSON.parse('{"title":"Coding Guide","description":"","frontmatter":{},"headers":[],"relativePath":"Cesium-官方编码指南.md","filePath":"Cesium-官方编码指南.md"}'),o={name:"Cesium-官方编码指南.md"},p=l(`<h1 id="coding-guide" tabindex="-1"><a href="https://github.com/CesiumGS/cesium/blob/main/Documentation/Contributors/CodingGuide/README.md" target="_blank" rel="noreferrer">Coding Guide </a> <a class="header-anchor" href="#coding-guide" aria-label="Permalink to &quot;[Coding Guide ](https://github.com/CesiumGS/cesium/blob/main/Documentation/Contributors/CodingGuide/README.md)&quot;">​</a></h1><p>CesiumJS 是世界上最大的 JavaScript 代码库之一。从一开始，我们就一直保持着代码质量的高标准，这使得代码库对于新老贡献者来说都更容易使用。我们希望您发现代码库干净且一致。</p><p>除了描述典型的编码约定外，本指南还涵盖了设计、可维护性和性能方面的最佳实践。它是许多开发人员经过多年的生产开发、研究和实验后积累的建议。</p><p>本指南适用于 CesiumJS 和用 JavaScript 编写的 Cesium 生态系统的所有部分。</p><p>🎨: 调色板图标表示设计提示。</p><p>🏠: 房子图标表示可维护性提示。当然，整个指南都是关于编写可维护代码的。</p><p>🚤: 快艇表示性能提示。</p><p>在某种程度上，本指南可以概括为_使新代码与现有代码相似_。</p><h2 id="命名" tabindex="-1">命名 <a class="header-anchor" href="#命名" aria-label="Permalink to &quot;命名&quot;">​</a></h2><ul><li>目录名称为 <code>PascalCase</code>，例如 <code>Source/Scene</code>。</li><li>构造函数是<code>PascalCase</code>，例如<code>Cartesian3</code>。</li><li>函数是 <code>camelCase</code>，例如，<code>defaultValue()</code>、<code>Cartesian3.equalsEpsilon()</code>。</li><li>文件以 <code>.js</code> 结尾并与 JavaScript 标识符同名，例如，<code>Cartesian3.js</code> 和 <code>defaultValue.js</code>。</li><li>变量，包括类属性，是 <code>camelCase</code>，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">minimumPixelSize </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 类属性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> bufferViews </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gltf</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">bufferViews</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 局部变量</span></span></code></pre></div><ul><li>私有（按照惯例）成员以下划线开头，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_canvas </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> canvas</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>常量为带下划线的大写字母，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UNIT_X </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">freeze</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>避免在公共标识符中使用缩写，除非全名过于繁琐并且具有广泛接受的缩写，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">maximumComponent</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 不是 Cartesian3.maxComponent() </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Ellipsoid</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WGS84</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 不是 Ellipsoid.WORLD_GEODETIC_SYSTEM_1984</span></span></code></pre></div><ul><li>首选局部变量的简短描述性名称，例如，如果一个函数只有一个长度变量，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> primitivesLength </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> primitives</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> length </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> primitives</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>在闭包中访问外部作用域的 <code>this</code> 时，将变量命名为 <code>that</code>，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> that </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_showTouch </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createCommand</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">that</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_touch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>下面介绍了更多命名约定及其设计模式，例如，<a href="#options-parameters"><code>options</code>参数</a>、[<code>result</code>参数和临时变量](#result-parameters-and-scratch -variables) 和 <a href="#from-constructors"><code>from</code>构造函数</a>。</p><h2 id="格式化" tabindex="-1">格式化 <a class="header-anchor" href="#格式化" aria-label="Permalink to &quot;格式化&quot;">​</a></h2><ul><li>我们使用 <a href="https://prettier.io/" target="_blank" rel="noreferrer">prettier</a> 在提交时自动重新格式化所有 JS 代码，因此所有工作都已为您完成。提交时代码会自动重新格式化。</li><li>对于 HTML 代码，保持现有样式。使用双引号。</li><li>文本文件，以换行符结尾以最小化差异中的噪音。</li></ul><h2 id="linting" tabindex="-1">Linting <a class="header-anchor" href="#linting" aria-label="Permalink to &quot;Linting&quot;">​</a></h2><p>对于语法和样式指南，我们使用 ESLint 推荐的设置（规则列表可以在<a href="http://eslint.org/docs/rules/" target="_blank" rel="noreferrer">此处</a> 找到）作为基础，并通过共享的附加规则对其进行扩展配置节点模块，<a href="https://www.npmjs.com/package/eslint-config-cesium" target="_blank" rel="noreferrer">eslint-config-cesium</a>。该包作为 Cesium 存储库的一部分进行维护，并在整个 Cesium 生态系统中使用。有关已启用规则的列表，请查看 <a href="https://github.com/CesiumGS/cesium/blob/main/Tools/eslint-config-cesium/index.js" target="_blank" rel="noreferrer">index.js</a>、<a href="https://github.com/CesiumGS/eslint-config-cesium/blob/main/browser.js" target="_blank" rel="noreferrer">browser.js </a> 和 <a href="https://github.com/CesiumGS/eslint-config-cesium/blob/main/node.js" target="_blank" rel="noreferrer">node.js</a></p><p><strong>一般规则：</strong></p><ul><li><a href="http://eslint.org/docs/rules/block-scoped-var" target="_blank" rel="noreferrer">block-scoped-var</a></li><li><a href="http://eslint.org/docs/rules/no-alert" target="_blank" rel="noreferrer">no-alert</a></li><li><a href="http://eslint.org/docs/rules/no-floating-decimal" target="_blank" rel="noreferrer">无浮动小数</a></li><li><a href="http://eslint.org/docs/rules/no-implicit-globals" target="_blank" rel="noreferrer">no-implicit-globals</a></li><li><a href="http://eslint.org/docs/rules/no-loop-func" target="_blank" rel="noreferrer">no-loop-func</a></li><li><a href="http://eslint.org/docs/rules/no-use-before-define" target="_blank" rel="noreferrer">no-use-before-define</a> 以防止在定义变量和函数之前使用它们。</li><li><a href="http://eslint.org/docs/rules/no-else-return" target="_blank" rel="noreferrer">no-else-return</a></li><li><a href="http://eslint.org/docs/rules/no-undef-init" target="_blank" rel="noreferrer">no-undef-init</a></li><li><a href="http://eslint.org/docs/rules/no-sequences" target="_blank" rel="noreferrer">无序列</a></li><li><a href="http://eslint.org/docs/rules/no-unused-expressions" target="_blank" rel="noreferrer">no-unused-expressions</a></li><li><a href="http://eslint.org/docs/rules/no-trailing-spaces" target="_blank" rel="noreferrer">无尾随空格</a></li><li><a href="http://eslint.org/docs/rules/no-lonely-if" target="_blank" rel="noreferrer">no-lonely-if</a></li><li><a href="http://eslint.org/docs/rules/quotes" target="_blank" rel="noreferrer">quotes</a> 强制使用单引号</li><li><a href="http://eslint.org/docs/rules/no-sequences" target="_blank" rel="noreferrer">no-sequences</a></li><li><a href="http://eslint.org/docs/rules/no-unused-expressions" target="_blank" rel="noreferrer">no-unused-expressions</a></li></ul><p><strong>Node特定规则：</strong></p><ul><li><a href="http://eslint.org/docs/rules/global-require" target="_blank" rel="noreferrer">global-require</a></li><li><a href="http://eslint.org/docs/rules/no-buffer-constructor" target="_blank" rel="noreferrer">no-buffer-constructor</a></li><li><a href="http://eslint.org/docs/rules/no-new-require" target="_blank" rel="noreferrer">no-new-require</a></li></ul><p><strong><a href="http://eslint.org/docs/user-guide/configuring#disabling-rules-with-inline-comments" target="_blank" rel="noreferrer">使用内联注释禁用规则</a></strong></p><ul><li>当为一行禁用 linting 时，使用 <code>//eslint-disable-next-line</code>:</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">exit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">warningMessage</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//eslint-disable-next-line no-alert </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cannot exit : </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warningMessage</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>当禁用代码块的 linting 时，将 <code>eslint-disable</code> 注释放在新行上并尽可能靠近相关代码：\`\`\`</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*eslint-disable no-empty*/</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">lineNumber</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">parseInt</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substring</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">lineStart</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lineEnd1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> (ex) </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*eslint-enable no-empty*/</span></span></code></pre></div><h2 id="单位" tabindex="-1">单位 <a class="header-anchor" href="#单位" aria-label="Permalink to &quot;单位&quot;">​</a></h2><ul><li>Cesium 使用 SI 单位： <ul><li>米表示距离</li><li>弧度表示角度</li><li>持续时间的秒数</li></ul></li><li>如果一个函数的参数有一个非标准单位，比如度，把单位放在函数名里，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromDegrees</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">longitude</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">latitude</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">height</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">ellipsoid</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">*</span><span style="color:#C3E88D;"> ... </span><span style="color:#89DDFF;">*</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="基本代码构造" tabindex="-1">基本代码构造 <a class="header-anchor" href="#基本代码构造" aria-label="Permalink to &quot;基本代码构造&quot;">​</a></h2><ul><li>Cesium 使用 JavaScript 的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noreferrer">严格模式</a> 所以每个模块（文件）包含</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>🚤: 为避免类型强制转换（隐式类型转换），使用 <code>===</code> 和 <code>!==</code> 测试相等性，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (i </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (i </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>为了帮助人类读者，对于打算作为浮点数值的整数，请在其末尾添加<code>.0</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//例如，除非 f 是整数，否则最好写成</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>在第一次使用的地方声明变量。例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> models </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* ... */</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> length </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">i) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">m</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">models</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Use m</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> models </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [ </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* ... */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> length </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">i) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">m</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">models</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 使用 m </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li><code>let</code> 和 <code>const</code> 变量具有块级作用域。不要依赖变量提升，即在变量声明之前使用它，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(i)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 我在这里是未定义的。永远不要在变量声明之前使用它。</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li><p>当值未更新时，首选 <code>const</code> 变量。这确保了不变性。</p></li><li><p>🚤: 避免冗余的嵌套属性访问。如：</p></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">scene</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">environmentState</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isSkyAtmosphereVisible </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">scene</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">environmentState</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isSunVisible </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">scene</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">environmentState</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isMoonVisible </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> environmentState </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scene</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">environmentState</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">environmentState</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isSkyAtmosphereVisible </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">environmentState</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isSunVisible </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">environmentState</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isMoonVisible </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>不要创建只使用一次的局部变量，除非它显着提高可读性，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">radiiEquals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">right</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">leftRadius</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">radius</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rightRadius</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">radius</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">leftRadius</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rightRadius</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">radiiEquals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">right</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">radius</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">radius</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>使用 <code>undefined</code> 而不是 <code>null</code>。</li><li>使用<code>Cesium.defined</code> 测试一个变量是否被定义，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> v </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#82AAFF;">defined</span><span style="color:#A6ACCD;">(v)) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// False</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> u </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{};</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#82AAFF;">defined</span><span style="color:#A6ACCD;">(u)) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// True </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>使用 <code>Object.freeze</code> 函数创建枚举，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ModelAnimationState </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">STOPPED </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">ANIMATING </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">freeze</span><span style="color:#A6ACCD;">(ModelAnimationState)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>对不明显的代码使用描述性注释，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">byteOffset </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> sizeOfUint32</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 将 4 添加到 byteOffset</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">byteOffset </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> sizeOfUint32</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 跳过长度字段</span></span></code></pre></div><ul><li>在代码合并到 main 之前需要删除或解决 <code>TODO</code> 注释。使用<code>// PERFORMANCE_IDEA : </code>注释标记可能优化的点，以便以后在性能分析时使用，但要谨慎使用。</li><li>在合并到 main 之前删除注释掉的代码。</li><li>现代语言功能可能会提供方便的快捷方式和更简洁的语法，但在使用它们时应考虑到它们对性能的影响，尤其是在每帧调用的代码中。</li></ul><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><ul><li>🎨: 函数应该是<strong>内聚的</strong>；他们应该只做一项任务。</li><li>函数中的语句应该处于相似的抽象级别。如果一个代码块比其余的语句低得多，那么移至辅助函数是一个很好的选择，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Cesium3DTileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">frameState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_processingQueue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">process</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">selectTiles</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">updateTiles</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Cesium3DTileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">frameState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">processTiles</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">selectTiles</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">updateTiles</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">processTiles</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">tileset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">frameState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_processingQueue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">process</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tileset</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>不要在函数末尾使用不必要的 <code>else</code> 块，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getTransform</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">defined</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">matrix</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">matrix</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromTranslationQuaternionRotationScale</span><span style="color:#F07178;">( </span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">translation</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rotation</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scale</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    )</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getTransform</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">defined</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">matrix</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">matrix</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromTranslationQuaternionRotationScale</span><span style="color:#F07178;">( </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">translation</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rotation</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scale</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>🚤: 较小的函数更有可能被 JavaScript 引擎优化。对于可能成为热点的代码，请考虑这一点。</li></ul><h3 id="options-参数" tabindex="-1"><code>options</code> 参数 <a class="header-anchor" href="#options-参数" aria-label="Permalink to &quot;\`options\` 参数&quot;">​</a></h3><p>🎨: 许多 Cesium 函数采用 <code>options</code> 参数来支持可选参数、自动生成代码文档和向前兼容性。例如，考虑：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sphere </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SphereGeometry</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> VertexFormat</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POSITION_ONLY)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>不清楚数值代表什么，调用者需要知道参数的顺序。如果这需要一个<code>options</code>参数，它看起来像这样：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sphere </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SphereGeometry</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">radius</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stackPartitions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">slicePartitions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">vertexFormat</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> VertexFormat</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POSITION_ONLY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>🚤: 使用 <code>{ /* ... */ }</code> 创建一个对象字面量，这是一种内存分配，比较慢。所以如果函数可能被频繁调用，请避免设计使用<code>options</code>参数的函数；否则，调用者将不得不使用临时变量（参见 [ <code>result</code> 参数和临时变量](# <code>result</code> 参数和临时变量)）来提高性能。除了数学类的构造函数外，其他的类构造函数都可以使用<code>options</code>参数。Cesium 避免了在被频繁调用的类使用<code>options</code>去构造对象。例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">z</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>对于 <code>Cartesian3</code> 构造函数来说是一个糟糕的设计，因为它的性能不如</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="默认参数值" tabindex="-1">默认参数值 <a class="header-anchor" href="#默认参数值" aria-label="Permalink to &quot;默认参数值&quot;">​</a></h3><p>如果函数参数或类属性存在_合理_默认值，则不需要用户提供它。使用 Cesium 的 defaultValue 来分配一个默认值。例如，在 Cartesian3.fromRadians 中，height 默认为零：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromRadians</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">longitude</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">latitude</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">height</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">height</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">height</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>🚤: 不要使用 <code>defaultValue</code> ，如果它会导致不必要的函数调用或内存分配，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_mapProjection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#A6ACCD;">( </span></span>
<span class="line"><span style="color:#A6ACCD;">  options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">mapProjection</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GeographicProjection</span><span style="color:#A6ACCD;">() </span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_mapProjection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defined</span><span style="color:#A6ACCD;">(options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">mapProjection) </span></span>
<span class="line"><span style="color:#A6ACCD;">  ？options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">mapProjection </span></span>
<span class="line"><span style="color:#A6ACCD;">  : </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GeographicProjection</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>如果 <code>options</code> 参数是可选的，请使用 <code>defaultValue.EMPTY_OBJECT</code>，例如</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DebugModelMatrixPrimitive</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defaultValue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EMPTY_OBJECT</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10000000.0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">width</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2.0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>一些常见的合理默认值是</p><ul><li><code>height</code>: <code>0.0</code></li><li><code>ellipsoid</code>: <code>Ellipsoid.WGS84</code></li><li><code>show</code>: <code>true</code></li></ul><h3 id="抛出异常" tabindex="-1">抛出异常 <a class="header-anchor" href="#抛出异常" aria-label="Permalink to &quot;抛出异常&quot;">​</a></h3><p><a href="https://github.com/CesiumGS/cesium/blob/main/Source/Core/Check.js" target="_blank" rel="noreferrer">使用Cesium的Check</a>类在用户出现编码错误时抛出<code>DeveloperError</code>。最常见的错误是参数丢失、类型错误 或 类型错误且超出范围 或 超出范围。</p><ul><li>例如，要检查参数是否已定义并且是一个对象：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">maximumComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">cartesian</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//&gt;&gt;includeStart(&#39;debug&#39;, pragmas.debug);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Check</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">typeOf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">object</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cartesian</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cartesian</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//&gt;&gt;includeEnd(&#39;debug&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">cartesian</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cartesian</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cartesian</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">z</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>对于更复杂的参数检查，手动检查参数然后抛出 <code>DeveloperError</code>。示例：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unpackArray</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">array</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//&gt;&gt;includeStart(&#39;debug&#39;, pragmas.debug); </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Check</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defined</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">array</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">array</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Check</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">typeOf</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">greaterThanOrEquals</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">array.length</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">array</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">array</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">DeveloperError</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数组长度必须是 3 的倍数。</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//&gt;&gt;includeEnd(&#39;debug&#39;); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>要检查<code>DeveloperError</code>，请将代码包围在<code>includeStart</code>/<code>includeEnd</code>注释中，如上所示，以便开发人员可以在发布版本之前进行错误检查和优化。不要在 <code>includeStart</code>/<code>includeEnd</code> 中包含其他的副作用，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">maximumComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">cartesian</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//&gt;&gt;includeStart(&#39;debug&#39;, pragmas.debug); </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cartesian</span><span style="color:#F07178;">；</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Check</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">typeOf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">object</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cartesian</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cartesian</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//&gt;&gt;includeEnd(&#39;调试&#39;); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 在调试中工作。发布失败，因为 c 被优化了！</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">cx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cy</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cz</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>当运行时出现错误时，会使用Cesium的<code>RuntimeError</code>进行抛出。与<code>DeveloperError</code>不同，<code>RuntimeError</code>不会在发布版本中被优化掉，因为这些错误可能会导致程序的崩溃或者其他严重问题，需要在运行时进行检查和处理。</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> WebGLRenderingContext </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">RuntimeError</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">浏览器不支持 WebGL。</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>🎨 异常是特殊情况。尽量避免抛出异常，例如，如果一条多段线只提供一个位置，而不是两个或更多，那么只是不渲染它而不是抛出异常。</p><h3 id="result-参数和scratch临时变量" tabindex="-1"><code>result</code> 参数和<code>Scratch</code>临时变量 <a class="header-anchor" href="#result-参数和scratch临时变量" aria-label="Permalink to &quot;\`result\` 参数和\`Scratch\`临时变量&quot;">​</a></h3><pre><code>🚤: 在 JavaScript 中，用户定义的类（如\`Cartesian3\`）是引用类型，并且因此分配在堆上。频繁分配这些类型会导致严重的性能问题，因为它会产生 GC 压力，从而导致垃圾收集器运行更长时间和更频繁。
</code></pre><p>Cesium 使用必需的<code>result</code>参数来避免隐式内存分配。例如，</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(v0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v1)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//会为返回的sum隐含分配一个新的Cartesian3对象。</span></span></code></pre></div><p>相反，如果<code>Cartesian3.add</code> 需要一个<code>result</code> 参数，</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(v0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Result 和 sum 引用同一个对象</span></span></code></pre></div><p>就会使得内存分配对调用者显式，这使得调用者可以在文件范围的临时变量中重复使用结果对象：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> scratchDistance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//在被频繁调用的函数之外声明会被重复使用的临时变量，而不是在函数里</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">distance</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">right</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subtract</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">scratchDistance</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">magnitude</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">scratchDistance</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>这样的代码不够简洁，但是性能提升通常非常明显。</p><p>如下所述，<code>add</code>构造函数还使用可选的<code>result</code>参数。 但由于result参数并非始终必需或返回，不要严格依赖传递的result参数被修改。例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(v0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>因此，最好的方式是在每一次方法调用的时候都显式地对result进行赋值，而不是依赖于方法中隐含的运算:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(v0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="类" tabindex="-1">类 <a class="header-anchor" href="#类" aria-label="Permalink to &quot;类&quot;">​</a></h2><ul><li>🎨: 类应该是<strong>内聚的</strong>。一个类应该代表一个抽象。</li><li>🎨: 类应该<strong>松耦合</strong>。两个类不应该纠缠在一起并依赖彼此的实现细节；他们应该通过定义明确的接口进行通信。</li></ul><h3 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h3><ul><li>通过创建构造函数来创建类：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">y</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">z</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">z</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">z</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>通过使用 <code>new</code> 调用构造函数来创建类（<em>object</em>）的实例：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>🚤: 在构造函数中为类的所有属性成员分配初始值。这允许 JavaScript 引擎使用隐藏类并避免进入字典模式。如果没有合适的初始值，请将属性的值设为 undefined。不要向对象添加属性，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">w </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4.0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 将 w 属性添加到 p，减慢属性访问，因为对象进入字典模式</span></span></code></pre></div><ul><li>🚤: 出于同样的原因，不要更改属性的类型，例如，将字符串分配给数字，例如</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">铯</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 将 x 更改为字符串，减慢属性访问速度</span></span></code></pre></div><ul><li><p>在构造函数中，将属性视为一次写入；不要写信给他们或多次阅读它们。如果需要读取它们，请创建一个局部变量 代替。例如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_xSquared </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_x </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_x</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>更好的做法</p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_xSquared </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">;</span></span></code></pre></div><blockquote><p>这个建议的原理是优化 JavaScript 引擎的内存管理和执行。当你在一个构造函数中写入属性时，JavaScript 引擎会动态地创建一个新的对象并为其分配内存，这个对象最终会成为构造函数创建的实例对象。当一个属性被写入值时，JavaScript 引擎不仅需要分配内存，还需要为每个实例对象保存这个属性值。如果在构造函数中重复读取该属性的值，当一个属性被读取时，JavaScript 引擎需要从内存中获取这个属性的值并将其加载到寄存器中。如果重复地访问同一个属性，每次引擎都需要不断地重新查找这个属性的内存地址并重新加载该值到寄存器中。这样的操作会涉及到大量的内存寻址和数据加载，导致性能下降。因此，如果一个属性需要被多次使用，为了避免这种性能损失，最好将其存储在一个本地变量中，而不是多次读取同一个属性的值。</p><p>JavaScript 引擎在处理对象时，应该使用类似于 C++ 编译器的静态类型或隐藏的类来提高性能。当定义一个新的对象时，JavaScript 引擎会查看它的结构并创建一个隐藏类。这个隐藏类会记录对象的形状，包括对象的属性和方法。当属性被添加到对象上时，引擎会检查该属性是否已经存在于隐藏类中。如果属性不存在，则隐藏类会动态地更新和扩展以包括新的属性。 JavaScript 引擎会根据隐藏类的结构优化代码。通过隐藏类，引擎可以轻松地为对象的属性分配内存，并且在访问时可以快速定位属性的内存地址。这种优化技术避免了使用字典模式，即每个对象都有自己的属性集。属性集这种方式需要使用哈希表，每次访问对象属性时需要在哈希表中进行查找，导致较慢的访问速度。 因此，在引擎预先生成隐藏类的基础上，将同样类型的属性打包在隐藏类中，每个属性都可以直接映射到内存地址，避免了字典模式的使用，从而实现了更快速的访问速度。</p><p>更底层的原理是，JavaScript 引擎的内存分配和访问方式是基于预测的。它会在运行时推断代码的数据类型并将其优化为快速指针操作。但是，如果在构造函数中混用属性访问和赋值，就会导致该对象进入字典模式，具体来说，当对象上的属性被访问时，JavaScript 引擎需要通过哈希表来查找该属性，这会造成一定的性能损失。而当对象上的属性被修改时，对象的内部结构会变化，这会导致 JavaScript 引擎重新生成隐藏类，从而导致性能下降。不过，值得注意的是，虽然混用属性访问和赋值会对性能造成影响，但这并不意味着 JavaScript 引擎完全放弃了对对象的优化。事实上，JavaScript 引擎会尽可能地通过隐藏类来优化对象的访问和执行。当对象进入字典模式时，JavaScript 引擎会退化为更老的内存管理和执行模式，但仍然会尽力优化其他对象不进入字典模式的成本。</p></blockquote><p>因此，虽然混用属性访问和赋值会对对象的性能造成损失，但 JavaScript 引擎仍然会尝试进行隐藏类优化，以提高对象的访问和执行效率。</p><p>不过，值得注意的是，虽然混用属性访问和赋值会对性能造成影响，但这并不意味着 JavaScript 引擎完全放弃了对对象的优化。事实上，JavaScript 引擎会尽可能地通过隐藏类来优化对象的访问和执行。当对象进入字典模式时，JavaScript 引擎会退化为更老的内存管理和执行模式，但仍然会尽力优化其他对象不进入字典模式的成本。</p><p>因此，虽然混用属性访问和赋值会对对象的性能造成损失，但 JavaScript 引擎仍然会尝试进行隐藏类优化，以提高对象的访问和执行效率。</p><h3 id="from-构造函数" tabindex="-1"><code>from</code> 构造函数 <a class="header-anchor" href="#from-构造函数" aria-label="Permalink to &quot;\`from\` 构造函数&quot;">​</a></h3><p>🎨: 构造函数应该将类的基本组件作为参数。例如，<code>Cartesian3</code>采用<code>x</code>、<code>y</code>和<code>z</code>。</p><p>从其他参数构造对象通常很方便。<strong>由于 JavaScript 没有函数重载</strong>，Cesium 使用 以 <code>from</code> 为前缀的静态函数以这种方式构造对象。例如：</p><blockquote><p>由于 JavaScript 没有函数重载，函数名相同的函数在同一作用域下只能定义一次。但是有时候需要不同的构造函数能够接收不同的参数。因此，Cesium 使用静态函数和 from 前缀来表示不同类型的构造函数，并使用函数的参数来表示不同的组件。这样，即使函数名相同，也能通过参数类型和数量的不同来区分不同的构造函数。这样也为JS 增加了一部分的函数重载功能。</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromRadians</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2.007</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.645</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 使用经度和纬度构造 Cartesian3 对象</span></span></code></pre></div><p>这些是使用可选的 <code>result</code> 参数实现的，它允许调用者传入临时变量：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromRadians</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">longitude</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">latitude</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">height</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;">） </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 使用经度、纬度、高度计算 x、y、z </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">if</span><span style="color:#A6ACCD;"> (!</span><span style="color:#A6ACCD;font-style:italic;">defined</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;">)) </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(); </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;">.</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x; </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;">.</span><span style="color:#A6ACCD;font-style:italic;">y</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> y; </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;">.</span><span style="color:#A6ACCD;font-style:italic;">z</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> z; </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;">；</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><p>由于调用 <code>from</code> 构造函数不需要现有对象，因此该函数被分配给 <code>Cartesian3.fromRadians</code>，而不是 <code>Cartesian3.prototype.fromRadians</code>。</p><h3 id="to-函数" tabindex="-1"><code>to</code> 函数 <a class="header-anchor" href="#to-函数" aria-label="Permalink to &quot;\`to\` 函数&quot;">​</a></h3><p>以 <code>to</code> 开头的函数返回一种新类型的对象，例如</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(\${this.x}, \${this .y}, \${this.z})</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="对基础类谨慎使用原型函数" tabindex="-1">对基础类谨慎使用原型函数 <a class="header-anchor" href="#对基础类谨慎使用原型函数" aria-label="Permalink to &quot;对基础类谨慎使用原型函数&quot;">​</a></h3><p>🎨: 诸如<code>Cartesian3</code>、<code>Quaternion</code>、<code>Matrix4</code> 和<code>JulianDate</code> 之类的基础数学类很少使用原型函数。例如，<code>Cartesian3</code> 没有像这样的原型 <code>add</code> 函数：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> v2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> v0</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(v1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>相反，它被写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> v2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(v0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>唯一的例外是</p><ul><li><code>clone</code></li><li><code>equals</code></li><li><code>equalsEpsilon</code></li><li><code>toString</code></li></ul><p>这些原型函数通常委托给非原型（静态）版本（原型版本的好处是可以多态使用），例如，</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equals</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">right</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">    (</span><span style="color:#82AAFF;">defined</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">defined</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">z</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">z</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equals</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">right</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equals</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="静态常量" tabindex="-1">静态常量 <a class="header-anchor" href="#静态常量" aria-label="Permalink to &quot;静态常量&quot;">​</a></h3><p>要创建与类相关的静态常量，请使用 <code>Object.freeze</code>：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cartesian3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ZERO </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">freeze</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cartesian3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="私有函数" tabindex="-1">私有函数 <a class="header-anchor" href="#私有函数" aria-label="Permalink to &quot;私有函数&quot;">​</a></h3><p>与私有属性一样，私有函数以 _ 开头。实际上，这些很少使用。相反，为了更好的封装，通常会使用一个文件范围的函数，并将 this 作为第一个参数传递进去。例如，</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Cesium3DTileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">frameState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">_processTiles</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">};</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Cesium3DTileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_processTiles</span><span style="color:#A6ACCD;">(tileset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> frameState) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_processingQueue</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">process</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tileset</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//最好写成</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Cesium3DTileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">frameState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">processTiles</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">};</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">processTiles</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">tileset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">frameState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_processingQueue</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tiles</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tiles</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">process</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tileset</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frameState</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="属性的getter-setters" tabindex="-1">属性的Getter/Setters <a class="header-anchor" href="#属性的getter-setters" aria-label="Permalink to &quot;属性的Getter/Setters&quot;">​</a></h3><p>无需额外处理即可读取或写入的公共属性可以简单地在构造函数中赋值，例如，</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Model</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">show</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">show</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>可以使用 <code>Object.defineProperties</code> 函数使用<strong>私有属性</strong>和 getter 创建只读属性，例如，</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cesium3DTileset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_url</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperties</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">Cesium3DTileset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_url</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Getters 可以执行任何需要的计算来返回属性，但性能期望是它们执行得很快。 Setters 还可以在分配给私有属性之前执行计算，设置标志以延迟计算，或两者兼而有之，例如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperties</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">UniformState</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">viewport</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_viewport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">viewport</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">BoundingRectangle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equals</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">viewport</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_viewport</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">BoundingRectangle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">viewport</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_viewport</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">v</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_viewport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">vc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_viewportCartesian4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">vc</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">vc</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">vc</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">z</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">vc</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">w</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_viewportDirty</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>🚤: 调用 getter/setter 函数比直接访问属性要慢，因此类内部的函数可以在适当的时候直接使用私有属性。</li></ul><h3 id="私有阴影属性" tabindex="-1">私有阴影属性 <a class="header-anchor" href="#私有阴影属性" aria-label="Permalink to &quot;私有阴影属性&quot;">​</a></h3><blockquote><p>当我们需要频繁地获取和设置对象属性时，使用getter/setter函数可能会导致代码性能下降，因为getter/setter函数需要动态地执行一些代码才能完成属性的获取和设置，并且每次调用都需要执行这些代码。此时，直接暴露属性可能会更有效率。但是，如果我们直接暴露对象的引用类型属性，其他代码可能会直接修改这些值，将其篡改，从而破坏了对象的内部状态。为了避免这种情况，我们可以通过将公共属性和私有阴影属性结合起来的方式，实现对属性的更好保护和控制。我们可以暴露公共属性用于读取和写入，同时在内部使用私有阴影属性保存属性值，在必要的时候判断私有阴影属性值是否发生改变，避免其他代码直接篡改属性值造成损害。这种方式可以在提高代码安全性和可维护性的前提下，减少性能开销。</p></blockquote><p>例如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Model</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">modelMatrix</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">( </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">defaultValue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">modelMatrix</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">IDENTITY</span><span style="color:#F07178;">) </span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_modelMatrix</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">modelMatrix</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//克隆以切断引用</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Model</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">frameState</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equals</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_modelMatrix</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">modelMatrix</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//切断引用后的同步方式：外部矩阵有变化才更新内部矩阵</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// clone() 是深拷贝。不是 this._modelMatrix = this._modelMatrix </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Matrix4</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">modelMatrix</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_modelMatrix</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 执行模型矩阵变化时需要发生的缓慢操作</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="将构造函数放在文件顶部" tabindex="-1">将构造函数放在文件顶部 <a class="header-anchor" href="#将构造函数放在文件顶部" aria-label="Permalink to &quot;将构造函数放在文件顶部&quot;">​</a></h3><p>即使需要辅助函数依赖<strong>提升</strong>，构造函数放在文件顶部也很方便，例如，<code> Cesium3DTileset.js</code>,</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadTileset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">tileset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">tilesJson</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">done</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cesium3DTileset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">loadTileset</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>最好写成</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cesium3DTileset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">loadTileset</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadTileset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">tileset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">tilesJson</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">done</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>它依赖于函数隐式将 <code>loadTileset</code> 提升到文件顶部。</p><h2 id="设计" tabindex="-1">设计 <a class="header-anchor" href="#设计" aria-label="Permalink to &quot;设计&quot;">​</a></h2><ul><li>🏠: 只有当它可能对最终用户有用时，才将类或函数作为 Cesium API 的一部分；避免将实现细节作为公共 API 的一部分。当某些东西是公开的时，它会使 Cesium API 变得更大，更难学习，以后更难更改，并且需要更多的文档工作。</li><li>🎨: 将新类和函数放在 Cesium 堆栈（目录<code>Source/XXX</code> ）的右侧部分。从下往上： <img src="https://raw.githubusercontent.com/CHENJIAMIAN/Blog/master/image/16825068650006j94b4.png" alt="gh"><ul><li><code>Source/Core</code> - 数字运算。纯数学，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Core/Cartesian3.js" target="_blank" rel="noreferrer"><code>Cartesian3</code></a>。纯几何体，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Core/CylinderGeometry.js" target="_blank" rel="noreferrer"><code>CylinderGeometry</code></a>。基本算法，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Core/mergeSort.js" target="_blank" rel="noreferrer"><code>mergeSort</code></a>。请求辅助函数，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Core/loadArrayBuffer.js" target="_blank" rel="noreferrer"><code>loadArrayBuffer</code></a>。</li><li><code>Source/Renderer</code> - WebGL 抽象，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Renderer/ShaderProgram.js" target="_blank" rel="noreferrer"><code>ShaderProgram</code></a> 和特定于 WebGL 的实用程序，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Renderer/ShaderCache.js" target="_blank" rel="noreferrer"><code> ShaderCache</code></a>。此目录中的标识符不是公共 Cesium API 的一部分。</li><li><code>Source/Scene</code> - 图形引擎，包括 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Scene/Model.js" target="_blank" rel="noreferrer">Model</a> 等 <code>primitive</code>。此目录中的代码通常依赖于 <code>Renderer</code>。</li><li><code>Source/DataSources</code> - 实体API，例如<a href="https://github.com/CesiumGS/cesium/blob/main/Source/DataSources/Entity.js" target="_blank" rel="noreferrer"><code>Entity</code></a>，以及数据源，例如<a href="https://github.com/CesiumGS/cesium/blob/main/Source/DataSources/CzmlDataSource.js" target="_blank" rel="noreferrer"><code> CzmlDataSource</code></a>。</li><li><code>Source/Widgets</code> - 主要的 Cesium <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Widgets/Viewer/Viewer.js" target="_blank" rel="noreferrer"><code>Viewer</code></a> 等小部件。</li></ul></li></ul><p>文件属于哪个目录通常很明显。如果不是，则通常在 <code>Core</code> 和另一个目录之间做出决定。如果它是纯数字运算或预计对 Cesium 通常有用的实用程序，请将文件放在 Core 中，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Core/Matrix4.js" target="_blank" rel="noreferrer"><code>Matrix4</code></a> 属于 <code>Core</code>，因为 Cesium 堆栈的许多部分都使用 4x4 矩阵；另一方面，<a href="https://github.com/CesiumGS/cesium/blob/main/Source/DataSources/BoundingSphereState.js" target="_blank" rel="noreferrer"><code>BoundingSphereState</code></a> 在 <code>DataSources</code> 中，因为它特定于数据源。 <img src="https://raw.fastgit.org/CesiumGS/cesium/main/Documentation/Contributors/CodingGuide/1.jpg" alt="CesiumJS Design"></p><p>模块（文件）应该只引用堆栈中同一级别或较低级别的模块。例如，<code>Scene</code> 中的模块可以使用<code>Scene</code>、<code>Renderer</code> 和<code>Core</code> 中的模块，但不能使用<code>DataSources</code> 或<code>Widgets</code> 中的模块。</p><ul><li>WebGL资源需要显式删除，因此包含它们的类（以及包含这些类的类等等）都必须具有 <code>destroy</code> 和 <code>isDestroyed</code> 函数，例如测试用例如下：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> primitive </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Primitive</span><span style="color:#A6ACCD;">(</span><span style="color:#676E95;font-style:italic;">/* ... */</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">expect</span><span style="color:#A6ACCD;">(content</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDestroyed</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toEqual</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">primitive</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">destroy</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">expect</span><span style="color:#A6ACCD;">(content</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDestroyed</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toEqual</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p><code>destroy</code> 函数用 Cesium 的 <code>destroyObject</code> 函数实现防止二次销毁，例如，</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">SkyBox</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">destroy</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_vertexArray</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_vertexArray</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_vertexArray</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">destroy</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">destroyObject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//再次调用时，如果已经销毁，则报错&quot;This object was destroyed, i.e., destroy() was called.&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>仅<code>销毁</code>您创建的对象；赋予类的外部对象应该由它们的所有者而不是该类来销毁。</li></ul><h3 id="弃用和重大更改" tabindex="-1">弃用和重大更改 <a class="header-anchor" href="#弃用和重大更改" aria-label="Permalink to &quot;弃用和重大更改&quot;">​</a></h3><p>从发布到发布，我们努力保持公共 Cesium API 稳定，同时保持可迁移性以快速开发并使 API 朝着正确的方向发展。因此，我们谨慎地弃用然后删除或替换部分公共 API。</p><p><code>@private</code> API 被认为是 Cesium 的实现细节，可以在不弃用的情况下立即被破坏。</p><blockquote><p>“立即中断”是指关闭或删除一个功能或API，不再支持其使用，而不提供升级迁移和替代方案。这意味着如果代码中使用了已经被立即中断的API，代码将不再能够正常工作，开发者需要立即做出相应的修改来解决问题。</p></blockquote><p><code>@experimental</code> API 在未来的 Cesium 版本中可能会发生重大变化，但不会弃用。它允许新的实验性功能，例如实施草稿格式。</p><p>公共标识符（类、函数、属性）在被删除之前应该被弃用。为此：</p><ul><li>决定应在那个未来版本的删除已弃用 API 。这是视具体情况而定的，具体取决于它对用户和 Cesium 开发的影响有多严重。大多数弃用的 API 将在 1-3 个版本中删除。如果需要，可以在拉取请求中对此进行讨论。</li><li>使用 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Core/deprecationWarning.js" target="_blank" rel="noreferrer"><code>deprecationWarning</code></a> 警告用户 API 已弃用以及他们可以采取哪些主动更改，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Foo</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">deprecationWarning</span><span style="color:#F07178;">( </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo 在 CesiumJS 1.01 中已弃用。它将在 1.03 中删除。请改用 newFoo。</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>添加 <a href="http://usejsdoc.org/tags-deprecated.html" target="_blank" rel="noreferrer"><code>@deprecated</code></a> 文档标签。</li><li>除了专门测试已弃用 API 的单元测试外，删除 Cesium 中所有已弃用 API 的使用。</li><li>在 <a href="https://github.com/CesiumGS/cesium/blob/main/CHANGES.md" target="_blank" rel="noreferrer"><code>CHANGES.md</code></a> 的<code>Deprecated</code> 部分提及弃用。包括它将被删除的 Cesium 版本。</li><li>创建一个<a href="https://github.com/CesiumGS/cesium/issues" target="_blank" rel="noreferrer">问题</a>，标记<code>remove in [version]</code>标签来删除 API。</li><li>删除 API 后，在 <a href="https://github.com/CesiumGS/cesium/blob/main/CHANGES.md" target="_blank" rel="noreferrer"><code>CHANGES.md</code></a> 的<code>Breaking Changes</code> 部分添加对它的提及。</li></ul><h2 id="第三方库" tabindex="-1">第三方库 <a class="header-anchor" href="#第三方库" aria-label="Permalink to &quot;第三方库&quot;">​</a></h2><p>🏠: Cesium 很少使用第三方库。如果你想添加一个新的，请在<a href="https://community.cesium.com/" target="_blank" rel="noreferrer">Cesium社区论坛</a>上发帖(<a href="https://community.cesium.com/t/%E6%88%91%E4%BB%AC%E5%96%9C%E6%AC%A2%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/745" target="_blank" rel="noreferrer">示例讨论</a>)。该库应该</p><ul><li>具有兼容的许可证，例如 MIT、BSD 或 Apache 2.0。</li><li>提供 Cesium 真正需要且团队没有时间和/或专业知识来开发的功能。</li><li>轻量级、经过测试、维护并合理广泛使用。</li><li>不污染全局命名空间。</li><li>提供足够的价值来证明添加需要维护集成的第三方库是合理的，但是，添加第三方库可能会导致一些用户会对 Cesium 产生疑虑（因为使用第三方库需要额外的维护工作）</li></ul><p>添加或更新第三方库时：</p><ul><li>确保 <a href="https://github.com/CesiumGS/cesium/blob/main//LICENSE.md" target="_blank" rel="noreferrer">LICENSE.md</a> 更新为库的名称和完整的版权声明。</li><li>如果一个库作为 CesiumJS 版本的一部分发布，它应该包含在生成的 <a href="https://github.com/CesiumGS/cesium/blob/main//ThirdParty.json" target="_blank" rel="noreferrer"><code>ThirdParty.json</code></a> 中。 <ol><li>使用包 name 更新 <a href="https://github.com/CesiumGS/cesium/blob/main//ThirdParty.extra.json" target="_blank" rel="noreferrer"><code>ThirdParty.extra.json</code></a>。如果它是 <a href="https://github.com/CesiumGS/cesium/blob/main//package.json" target="_blank" rel="noreferrer"><code>package.json</code></a> 中包含的 npm 模块，请使用确切的包名称。</li><li>如果库_不是_包含在 <code>package.json</code> 中的 npm 模块，请提供 <code>license</code>、<code>version</code> 和 <code>url</code> 字段。否则，需保证可以使用 <code>package.json</code> 检测到此信息。</li><li>如果在许可证方面存在特例，比如在多个可用许可证中选择使用单个许可证，提供许可证字段将覆盖使用 <code>package.json</code> 检测到的信息。如果需要解释异常情况，则还应在<code>note</code>s字段中提供解释。</li><li>运行 <code>npm run build-third-party</code> 并提交生成的 <code>ThirdParty.json</code></li></ol></li></ul><h2 id="widgets" tabindex="-1">Widgets <a class="header-anchor" href="#widgets" aria-label="Permalink to &quot;Widgets&quot;">​</a></h2><p>Cesium 包含一些在查看器中使用的标准小部件，包括动画和时间轴控件、基础层选择器和地理编码器。这些小部件都是使用 <a href="http://knockoutjs.com/" target="_blank" rel="noreferrer">Knockout</a>) 构建的，用于自动刷新 UI。Knockout 使用模型视图视图模型 (MVVM) 设计模式。您可以在<a href="https://addyosmani.com/blog/understanding-mvvm-a-guide-for-javascript-developers/" target="_blank" rel="noreferrer">了解 MVVM - JavaScript 开发人员指南</a>中了解有关此设计模式的更多信息，</p><p>以了解如何使用Knockout 库，请参阅其主页的<a href="http://knockoutjs.com/" target="_blank" rel="noreferrer">入门</a> 部分。他们还有一个很棒的 <a href="http://learn.knockoutjs.com/" target="_blank" rel="noreferrer">交互式教程</a>，其中包含分步说明。</p><p>Cesium 还使用 <a href="http://blog.stevensanderson.com/2013/05/20/knockout-es5-a-plugin-to-simplify-your-syntax/" target="_blank" rel="noreferrer">Knockout-ES5</a> 插件来简化 knockout 语法，也就是自动深度监听，不用一个个监听。这让我们可以像使用其他变量一样使用 knockout observables。调用 <code>knockout.track</code> 来创建可观察对象。这是来自 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Widgets/BaseLayerPicker/BaseLayerPickerViewModel.js#L73" target="_blank" rel="noreferrer">BaseLayerPickerViewModel</a> 的示例，它为<code>tooltip</code>、<code>showInstructions</code>和<code> _touch</code> 属性制作可观察对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">knockout</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">track</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tooltip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">showInstructions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_touch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="knockout订阅" tabindex="-1">Knockout订阅 <a class="header-anchor" href="#knockout订阅" aria-label="Permalink to &quot;Knockout订阅&quot;">​</a></h3><p>只有当您无法完成您需要使用标准绑定执行的操作时，才使用Knockout订阅。对于 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Widgets/Viewer/Viewer.js#L588" target="_blank" rel="noreferrer">example</a>，<code>Viewer</code> 订阅了 <code>FullscreenButtonViewModel.isFullscreenEnabled</code> 因为它需要改变该值更改时时间轴小部件的宽度。这不能通过绑定来完成，因为来自<code>FullscreenButtonViewModel</code>的值正在影响不包含在该小部件中的值。</p><p>Cesium 包含一个 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Widgets/subscribeAndEvaluate.js" target="_blank" rel="noreferrer"><code>subscribeAndEvaluate</code></a> 辅助函数，用于订阅 knockout observable。</p><p>使用订阅时，请务必在视图模型不再使用时<a href="https://github.com/CesiumGS/cesium/blob/main/Source/Widgets/Viewer/Viewer.js#L1413" target="_blank" rel="noreferrer">处理订阅</a>它。否则，监听器将在可观察对象的生命周期内继续收到通知。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fullscreenSubscription </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">subscribeAndEvaluate</span><span style="color:#A6ACCD;">(fullscreenButton</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">viewModel</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">isFullscreenEnabled</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">isFullscreenEnabled</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ...然后稍后... </span></span>
<span class="line"><span style="color:#A6ACCD;">fullscreenSubscription</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispose</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="glsl" tabindex="-1">GLSL <a class="header-anchor" href="#glsl" aria-label="Permalink to &quot;GLSL&quot;">​</a></h2><h3 id="命名-1" tabindex="-1">命名 <a class="header-anchor" href="#命名-1" aria-label="Permalink to &quot;命名&quot;">​</a></h3><ul><li>GLSL 文件以 <code>.glsl</code> 结尾，位于 <a href="https://github.com/CesiumGS/cesium/tree/main/Source/Shaders" target="_blank" rel="noreferrer">Shaders</a> 目录中。</li><li>顶点着色器的文件有一个<code>VS</code>后缀；片段着色器有一个 <code>FS</code> 后缀。例如：<code>BillboardCollectionVS.glsl</code> 和 <code>BillboardCollectionFS.glsl</code>。</li><li>通常，函数和变量等标识符使用 <code>camelCase</code>。</li><li>Cesium 内置标识符以 <code>czm_</code> 开头，例如 <a href="https://github.com/CesiumGS/cesium/blob/main/Source/Shaders/Builtin/Structs/material.glsl" target="_blank" rel="noreferrer"><code>czm_material</code></a>。文件具有相同的名称，但不带 <code>czm_</code> 前缀，例如 <code>material.glsl</code></li></ul><blockquote><p>czm_textureCube是CesiumJS的一个库函数，其底层实现方式是根据WebGL上下文对象是否支持WebGL 2来使用不同的API进行操作的。如果当前浏览器使用的是WebGL 1，czm_textureCube会判断当前上下文对象无法支持WebGL 2，然后使用WebGL 1对应的API来实现立方体贴图的采样。因此，虽然czm_textureCube是为了满足WebGL 2的需求而存在的，但是它也能够通过兼容性处理来在WebGL 1中使用。</p></blockquote><ul><li>在对立方体贴图进行采样时使用 <code>czm_textureCube</code> 而不是 <code>texture</code>。这是为了保持与WebGL 1 的向后兼容性</li><li><code>Varyings</code> 以v_开头，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> vec2 v_textureCoordinates</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>uniform以 <code>u_</code> 开头，例如，</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">uniform sampler2D u_atlas</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>EC后缀表示点或向量位于眼睛坐标系中，例如，</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">varying vec3 v_positionEC</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#A6ACCD;">v_positionEC </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (czm_modelViewRelativeToEye </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> p)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xyz</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>当使用 <a href="https://help.agi.com/AGIComponents/html/BlogPrecisionsPrecisions.htm" target="_blank" rel="noreferrer">GPU RTE</a> 时，<code>High</code> 和 <code>Low</code> 后缀分别定义高位和低位，例如，</li></ul><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">attribute</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">vec3</span><span style="color:#A6ACCD;"> position3DHigh</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">attribute</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">vec3</span><span style="color:#A6ACCD;"> position3DLow</span><span style="color:#89DDFF;">;</span></span></code></pre></div><blockquote><p>WebGL通过利用GPU RTE提供的并行计算能力实现高质量的图形渲染和计算。GPU RTE通常包含更多的处理器核心和更高的内存带宽，可以同时处理多个数据和计算任务。</p><p>在底层原理方面，GPU RTE通过以下几个步骤实现并行计算：</p><ol><li>图形卡将计算任务传递给GPU驱动程序。</li><li>GPU驱动程序将任务分成多个小块，每个小块可以同时在GPU上执行。</li><li>单个任务被分配给多个处理器核心，并在GPU内存中运行。</li><li>处理器核心读取内存中的数据进行计算，可以同时读取多个数据并执行多个计算操作。</li><li>计算结果被写入GPU内存中。</li><li>GPU将所有结果合并为最终结果，并将结果传递回CPU。</li></ol><p>WebGL应用程序可以通过WebGL API调用将计算任务输出到GPU，并利用GPU RTE的并行计算能力完成计算任务。WebGL提供了多种类型的缓冲器（buffer）对象，可以将计算任务数据存储在GPU内存中。然后，WebGL API可以使用着色器程序来对这些数据进行计算，并将计算结果输出到缓冲器的另一端。</p><p>在更底层的实现原理方面，GPU RTE内部主要利用了并行计算架构和可编程着色器技术。GPU通常包含较多的处理器核心，可以同时执行多个计算操作。GPU RTE还可以利用单指令多数据（SIMD）指令集来加速计算，并在内存访问时通过存储器分层结构和缓存技术来提高内存带宽和访问速度。可编程着色器技术则允许开发者自定义计算任务，并可以在GPU上高效执行这些任务。</p><p>在最底层的实现原理方面，GPU RTE内部使用了硬件级别的并行计算技术，如SIMD指令，多核心架构等。此外，GPU内部还使用了高速缓存技术，内存条带技术等一系列优化技术来提高计算和内存访问速度。GPU RTE还能够执行复杂的图像和计算任务，并使用可编程着色器技术进行高效的计算和渲染。</p></blockquote><ul><li>2D 纹理坐标是 <code>s</code> 和 <code>t</code>，而不是 <code>u</code> 和 <code>v</code>，例如，</li></ul><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">attribute</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">vec2</span><span style="color:#A6ACCD;"> st</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="格式化-1" tabindex="-1">格式化 <a class="header-anchor" href="#格式化-1" aria-label="Permalink to &quot;格式化&quot;">​</a></h3><ul><li>使用与 JavaScript 相同的格式，除了将 <code>{</code> 换行，例如，</li></ul><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> czm_ray</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    vec3 origin</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    vec3 direction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能" aria-label="Permalink to &quot;性能&quot;">​</a></h3><ul><li>🚤: 尽可能不频繁地计算昂贵的值，例如，更喜欢在 JavaScript 中计算一个值并以统一的方式传递它，而不是冗余地计算每个顶点的相同值。同样，更喜欢计算每个顶点的值并传递一个变量，而不是尽可能计算每个片段。</li><li>🚤: 谨慎使用 <code>discard</code>，因为它会禁用 early-z GPU 优化。</li></ul><h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">​</a></h2><p>请参阅 Cesium 贡献者 Matthew Amato 和 Kevin Ring 在 <em>WebGL Insights</em> 中 <a href="http://webglinsights.github.io/downloads/WebGL-Insights-Chapter-4.pdf" target="_blank" rel="noreferrer">认真对待 JavaScript</a> 的第 4.1 至 4.3 节，以更深入地了解模块和性能。</p><p>观看 Lilli Thompson 的<a href="https://www.youtube.com/watch?v=XAqIpGU8ZZk" target="_blank" rel="noreferrer">从控制台到 Chrome</a>，了解更深入的性能介绍。</p>`,241),e=[p];function t(c,r,y,D,F,i){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
