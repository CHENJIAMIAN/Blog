import{_ as s,o as n,c as a,O as l}from"./chunks/framework.4afe7240.js";const p="/assets/C1CB023D0C2C4E63B9125BCB89A233A8.17fa8bb4.png",o="/assets/ACCDADC8CE4A45938AF105931A87BCDB.08f12507.png",d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"【区块链】.md","filePath":"【区块链】.md"}'),e={name:"【区块链】.md"},t=l(`<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">如何切到uni v3</span></span>
<span class="line"><span style="color:#A6ACCD;">    Uniswap v3的概述。我们的目标是在 2021年5 月 5日推出 L1 以太坊主网，不久之后将在Optimism 上部署 L2</span></span>
<span class="line"><span style="color:#A6ACCD;">代币怎么交换</span></span>
<span class="line"><span style="color:#A6ACCD;">NFT怎么流转</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 手续费怎么转给自己</span></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">智能合约开发人员</span><span style="color:#676E95;font-style:italic;">//– 致力于后端智能合约，开发核心数字处理功能，这些功能需要完美，没有错误的余地。智能合约开发人员通常会在 Solidity 中为基于 Ethereum 或 Rust for Solana 的任何东西工作。</span></span>
<span class="line"><span style="color:#A6ACCD;">智能合约审计员</span><span style="color:#676E95;font-style:italic;">//——专注于安全和防止资金损失。审核员将评估代码、寻找边缘案例并使用模糊器等工具进行评估。</span></span>
<span class="line"><span style="color:#A6ACCD;">Web3 开发人员</span><span style="color:#676E95;font-style:italic;">//——创建一个网站或 dApp 前端，连接到钱包（如 metamask）并与底层智能合约交互。Web3 开发人员通常有一些 webdev 经验，并且会使用 Javascript 来解决主要的复杂性。</span></span></code></pre></div><ul><li><ol start="2"><li>学习区块链的基础知识</li></ol></li><li><ol start="3"><li>什么是去中心化应用程序？</li></ol></li><li><ol start="7"><li>区块链上的软件：智能合约</li></ol></li><li><ol start="8"><li>学习 Solidity 来开发和部署智能合约</li></ol></li><li><ol start="9"><li>成熟的 Web3 开发者路径</li></ol></li><li><ol start="10"><li>通过构建项目来学习 Solidity – Buildspace</li></ol></li><li><ol start="12"><li>通过创建僵尸来学习 Solidity</li></ol></li><li><ol start="13"><li>连接你的 DApp 前端：学习 Web3.js 或 Ethers.js</li></ol></li><li><p>13.1 学习 Web3.js</p></li><li><p>13.2 学习 Ethers.js</p></li><li><p>14 - 学习炼金术 将 Alchemy 视为区块链中的 AWS</p></li><li><p>15 – 学习 Remix IDE</p></li><li><ol start="16"><li>开发你的第一个 Web 项目</li></ol></li><li><ol start="17"><li>学习安全帽</li></ol></li><li><ol start="18"><li>学习松露和甘纳许</li></ol></li><li><ol start="19"><li>学习如何测试你的智能合约</li></ol></li><li><p>如何测试我的去中心化应用程序？</p></li><li><p>快速创建 DApp，学习 Moralis。</p></li><li><p>结论</p></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">区块链</span><span style="color:#A6ACCD;">(也叫公链)</span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;">(只是货币2008)</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F78C6C;">2.0</span><span style="color:#A6ACCD;">(存各种数据</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">合约2014)</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">0</span><span style="color:#82AAFF;">解决性能问题</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2017</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        Merkle Hash是把一系列数据的哈希根据一个简单算法变成一个汇总的哈希</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">UTXO</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">还没花的钱</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2.0</span></span>
<span class="line"><span style="color:#A6ACCD;">        以太坊</span><span style="color:#676E95;font-style:italic;">//区块头部有三个MPT树根(状态/交易/数据)</span></span>
<span class="line"><span style="color:#A6ACCD;">        以太坊layer1已经变得过于昂贵，目前合同部署成本已经达到数千美元。</span></span>
<span class="line"><span style="color:#A6ACCD;">            对此的解决方案是使用与以太坊相同的代码库和 EVM（因此 Solidity 代码也适用）</span></span>
<span class="line"><span style="color:#A6ACCD;">            但具有不同程度的去中心化的第三方方项目</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">layer2</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            Arbitrum        Optimism        Avax        Binance Smart Chain</span></span>
<span class="line"><span style="color:#A6ACCD;">            Polygon Matic        Fantom        ZKsync        Moonriver</span></span>
<span class="line"><span style="color:#A6ACCD;">            HECO Huboi Eco Chain        Cronos        </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">3.0</span></span>
<span class="line"><span style="color:#A6ACCD;">        EOS IO 是一个高性能的开源区块链平台，旨在支持和运行安全、合规和可预测的数字基础设施。</span></span>
<span class="line"><span style="color:#A6ACCD;">        NEO 是中国第一个公链项目。它也被称为中国的以太坊，由发展智能经济的愿景驱动。NEO dApps 生态系统是该平台的最强命题。</span></span>
<span class="line"><span style="color:#A6ACCD;">        波卡</span><span style="color:#676E95;font-style:italic;">//要做各种区块链的操作系统 发行DOT, 自称layer0, 可以链接各个layer1</span></span>
<span class="line"><span style="color:#A6ACCD;">            支持任何类型的数据或资产的跨区块链传输</span></span>
<span class="line"><span style="color:#A6ACCD;">            通过启用一组通用的验证器来保护多个区块链</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">通过在多个并行区块链上传播交易来提供交易可扩展性。</span></span>
<span class="line"><span style="color:#A6ACCD;">           其下一代</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">提名权益证明</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> (NPoS) 只消耗了传统区块链使用的一小部分能源。</span></span>
<span class="line"><span style="color:#A6ACCD;">           治理系统所有利益相关者都有发言权。网络升级在链上协调并自主实施</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">无需分叉网络</span></span>
<span class="line"><span style="color:#A6ACCD;">           发行DOT目的：</span></span>
<span class="line"><span style="color:#A6ACCD;">                治理</span><span style="color:#676E95;font-style:italic;">//Polkadot 代币持有者可以完全控制协议。其他平台上矿工专有的所有特权将授予中继链参与者（DOT 持有者）,包括管理协议升级和修复等异常事件。</span></span>
<span class="line"><span style="color:#A6ACCD;">                质押</span><span style="color:#676E95;font-style:italic;">//博弈论激励代币持有者以诚实的方式行事。这种机制会奖励好的参与者,而坏参与者将失去他们在网络中的股份。这可确保网络保持安全。</span></span>
<span class="line"><span style="color:#A6ACCD;">                粘合</span><span style="color:#676E95;font-style:italic;">//通过绑定代币添加新的平行链。通过移除绑定代币来移除过时或无用的平行链。这是权益证明的一种形式。            </span></span>
<span class="line"><span style="color:#A6ACCD;">             中继链 </span><span style="color:#676E95;font-style:italic;">//主链,像插排, XCMP协议类似TCP/IP协议</span></span>
<span class="line"><span style="color:#A6ACCD;">             平行链 </span><span style="color:#676E95;font-style:italic;">//插在中继链上</span></span>
<span class="line"><span style="color:#A6ACCD;">             平行线程 </span><span style="color:#676E95;font-style:italic;">//临时插在中继链上</span></span>
<span class="line"><span style="color:#A6ACCD;">             桥接链 </span><span style="color:#676E95;font-style:italic;">//插排转接头</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#FFCB6B;">角色</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                    提名者</span><span style="color:#676E95;font-style:italic;">//选民 选出验证者</span></span>
<span class="line"><span style="color:#A6ACCD;">                        验证者</span><span style="color:#676E95;font-style:italic;">//矿工 //中央公务员</span></span>
<span class="line"><span style="color:#A6ACCD;">                            搜集者 </span><span style="color:#676E95;font-style:italic;">//地方公务员 搜集平行链中内部交易交给验证者</span></span>
<span class="line"><span style="color:#A6ACCD;">                        钓鱼者 </span><span style="color:#676E95;font-style:italic;">//纪检监察人员 监察验证者</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">以太坊是最大的区块链开发平台</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">是世界计算机</span></span>
<span class="line"><span style="color:#A6ACCD;">    内置开发语言solidity</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">内置js接口</span><span style="color:#A6ACCD;">(web3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js)</span></span>
<span class="line"><span style="color:#A6ACCD;">    以太坊有多条公链</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">一条主要的区块链</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">和若干条用于挖矿和测试用的区块链</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">智能合约</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">是跑在以太坊平台上的自动化程序</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 是一个可以存储一段代码的账户</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">相当于物理世界的ATM机    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">叔块</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">是比别的块慢一点而没被纳入主链的块</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 是个分叉</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    以太坊区块收入</span></span>
<span class="line"><span style="color:#A6ACCD;">        普通区块收入</span></span>
<span class="line"><span style="color:#A6ACCD;">            —固定奖励（挖矿奖励），每个普通区块都有</span></span>
<span class="line"><span style="color:#A6ACCD;">            —区块内包含的所有程序的gas 花费的总和</span></span>
<span class="line"><span style="color:#A6ACCD;">                gasLimit是指该次交易最大消耗gas</span></span>
<span class="line"><span style="color:#A6ACCD;">                gasPrice是指你愿意为实际消耗的gas出多少价格</span></span>
<span class="line"><span style="color:#A6ACCD;">            —如果普通区块引用了叔块，每引用一个叔块可以得到固定奖励的1</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">32</span></span>
<span class="line"><span style="color:#A6ACCD;">        叔块收入</span></span>
<span class="line"><span style="color:#A6ACCD;">            叔块收入只有一项，就是叔块奖励，计算公式为：叔块奖励</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ( 叔块高度</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> –引用叔块的区块高度) </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> 普通区块奖励</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    外部账户：即普通用户用私钥控制的账户；</span><span style="color:#676E95;font-style:italic;">//EOA：External Owned Account </span></span>
<span class="line"><span style="color:#A6ACCD;">    合约账户：一种拥有合约代码的账户，它不属于任何人，也没有私钥与之对应。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">账户数据构成</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        nonce</span><span style="color:#676E95;font-style:italic;">//一个递增的整数记录的就是交易次数</span></span>
<span class="line"><span style="color:#A6ACCD;">        balance</span><span style="color:#676E95;font-style:italic;">//账户余额</span></span>
<span class="line"><span style="color:#A6ACCD;">        storageRoot</span><span style="color:#676E95;font-style:italic;">//合约账户特有,存储合约相关的状态数据</span></span>
<span class="line"><span style="color:#A6ACCD;">        codeHash</span><span style="color:#676E95;font-style:italic;">//合约账户特有,存储合约代码的Hash</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">    三种交易</span></span>
<span class="line"><span style="color:#A6ACCD;">        转</span></span>
<span class="line"><span style="color:#A6ACCD;">        创建</span></span>
<span class="line"><span style="color:#A6ACCD;">        调用</span><span style="color:#676E95;font-style:italic;">//合约交易就是指一个外部账号调用某个合约的某个public函数</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">MEV</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">矿工权利太大</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">知道用户的汽油费</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">以更高的汽油费抢在用户之前套利</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    Geth</span><span style="color:#676E95;font-style:italic;">//以太坊客户端的“官方”实现, 可以搭建本地私链,搭建本地的测试网,这样调试起来很快</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">ETH3</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    整个网络分成64个</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">分片链区块</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">1个</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">信标链区块</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">信标链的共识机制Casper</span><span style="color:#A6ACCD;">(PoS的一种)</span></span>
<span class="line"><span style="color:#A6ACCD;">        比PoS多了惩罚机制</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">通过保证金和下注正确的链</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 防止故意分叉获得双重奖励</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span></span>
<span class="line"><span style="color:#A6ACCD;">协议实验室</span></span>
<span class="line"><span style="color:#A6ACCD;"> 发布了IPFS星际文件系统</span></span>
<span class="line"><span style="color:#A6ACCD;"> 发布了FileCoin</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">代币Token</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">ERC20同质化</span><span style="color:#A6ACCD;">(可替代):比如 币安币</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">狗币</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">比特币</span></span>
<span class="line"><span style="color:#A6ACCD;">        ERC777标准试图改进广泛使用的ERC</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;"> 代币</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">ERC721非同质化</span><span style="color:#A6ACCD;">(non</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">fungible):比如数字艺术品</span></span>
<span class="line"><span style="color:#A6ACCD;">        ERC1155改进了它</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">使一个合约可以发任意种类的NFT    </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">MetaMask</span><span style="color:#676E95;font-style:italic;">//是远程客户端,自己作为一个区块链的一个节点身处在区块链中代替我们去交易,自己本地搭建为节点太麻烦了</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">OpenZeppelin </span><span style="color:#676E95;font-style:italic;">//是一组用 Solidity 编写的经过良好测试的npm库，您可以将其导入您的智能合约，而代码可能由 truffle 生成、维护和部署。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Alchemy </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> infura</span><span style="color:#676E95;font-style:italic;">//公共节点服务提供商, 不用自己搭建一个以太坊节点</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">三个智能合约开发框架</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    Hardhat </span><span style="color:#676E95;font-style:italic;">//在本地运行 Solidity无需处理实时环境即可轻松部署您的合约、运行测试和调试 Solidity 代码。当事务失败时，您会获得 Solidity 堆栈跟踪、console.log 和明确的错误消息。</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//Hardhat Network 是一个为开发而设计的本地以太坊网络。 npx hardhat init   </span></span>
<span class="line"><span style="color:#A6ACCD;">        区块链：Hardhat运行时环境</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">本地、测试网、主网</span></span>
<span class="line"><span style="color:#A6ACCD;">        测试支持：</span></span>
<span class="line"><span style="color:#A6ACCD;">    trufflesuite</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#676E95;font-style:italic;">//用于开发智能合约的工具,使用以太坊虚拟机 (EVM) 的世界级区块链开发环境、测试框架和资产管道，旨在让开发人员的生活更轻松。</span></span>
<span class="line"><span style="color:#A6ACCD;">        区块链：Ganache </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">本地，测试网，主网</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//Ganache 是模拟区块链，能够让我们的程序在开发环境中运行。它既可用作桌面应用程序，也可用作命令行工具（以前称为 TestRPC）。</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//合约对象可以直接在控制台使用</span></span>
<span class="line"><span style="color:#A6ACCD;">        npm i truffle </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g</span></span>
<span class="line"><span style="color:#A6ACCD;">        truffle version</span><span style="color:#676E95;font-style:italic;">//Truffle v5.4.33 (core: 5.4.33) Ganache v7.0.1 Solidity v0.5.16 (solc-js) Node v12.14.1 Web3.js v1.5.3</span></span>
<span class="line"><span style="color:#A6ACCD;">        truffle init </span><span style="color:#676E95;font-style:italic;">//migrations文件夹告诉如何部署, 1_initial_migrations.js不用管它,自带的, 自己在2_xxx_xx.js里写部署的东西</span></span>
<span class="line"><span style="color:#A6ACCD;">        truffle</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js</span><span style="color:#676E95;font-style:italic;">//配置编译器, 要发布的网</span></span>
<span class="line"><span style="color:#A6ACCD;">        truffle compile</span><span style="color:#676E95;font-style:italic;">//保证用的语法版本相互兼容后,构建后的物件都在build文件夹,abi的json文件都在build/contracts,给前端的ether.js等调用</span></span>
<span class="line"><span style="color:#A6ACCD;">        truffle develop</span><span style="color:#676E95;font-style:italic;">//启动内建版本的Ganache在127.0.0.1:9545, 提供了10个有eth的钱包给你调试</span></span>
<span class="line"><span style="color:#A6ACCD;">            migration </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">rest</span></span>
<span class="line"><span style="color:#A6ACCD;">        truffle migrate </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">reset </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">network </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">truffle-config.js里配置的测试网名称</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">        truffle console </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">network ropsten</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//操作发布到测试网的合约</span></span>
<span class="line"><span style="color:#A6ACCD;">            s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> 合约名称</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deployed</span><span style="color:#A6ACCD;">()</span><span style="color:#676E95;font-style:italic;">//           s.address</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">合约里的方法</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">//返回tx回执</span></span>
<span class="line"><span style="color:#A6ACCD;">    Aave</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">Dy</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">Dx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">Kollateral</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">uniswap 都有提供闪电贷</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">ethers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#676E95;font-style:italic;">//是简单版的web3.js    </span></span>
<span class="line"><span style="color:#A6ACCD;">    wallet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Wallet</span><span style="color:#A6ACCD;">(privateKey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> ethers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">providers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">InfuraProvider)</span></span>
<span class="line"><span style="color:#A6ACCD;">    contract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Contract</span><span style="color:#A6ACCD;">( addressOrName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   contractABI</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">abi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  wallet )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    contract</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">合约里的方法</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    contract</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">callStatic</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">合约里的方法</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//等同于 web3的contract.methods.合约里的方法().call();方法</span></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">EVM是以太坊虚拟机</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 由一部分一部分组成整个世界虚拟机</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">负责执行程序</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">进行以太坊状态转换</span></span>
<span class="line"><span style="color:#A6ACCD;">    将solidity编写的代码转为字节码和接口规范ABI</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 通过交易部署到区块链网络中</span></span>
<span class="line"><span style="color:#A6ACCD;">    返回的参数名词是什么取决于abi里面写的是什么</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">可以随便改</span><span style="color:#89DDFF;">!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">DApp去中心化APP组成</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">区块链上的智能合约</span><span style="color:#A6ACCD;">(放处理逻辑)</span></span>
<span class="line"><span style="color:#A6ACCD;">    2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">web前端界面</span><span style="color:#676E95;font-style:italic;">//通过web3.js+接口规范ABI去调用合约里的函数去操作数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">Solidity</span></span>
<span class="line"><span style="color:#A6ACCD;">    getter会在声明public变量自动生成的</span></span>
<span class="line"><span style="color:#A6ACCD;">    constructor在创建合约时触发一次</span></span>
<span class="line"><span style="color:#A6ACCD;">    1000000000000000000代表 </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> 个 ETH，小数点后 </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> 位</span></span>
<span class="line"><span style="color:#A6ACCD;">    内置变量</span></span>
<span class="line"><span style="color:#A6ACCD;">        msg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sender</span><span style="color:#676E95;font-style:italic;">//交易的发件人地址, 代表调用者</span></span>
<span class="line"><span style="color:#A6ACCD;">        block</span></span>
<span class="line"><span style="color:#A6ACCD;">        tx</span></span>
<span class="line"><span style="color:#A6ACCD;">        address</span><span style="color:#676E95;font-style:italic;">//20字节 address payable是可以发送以太的地址</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//balance</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#82AAFF;">address</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">balance</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">                address payable x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">payable</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0x123</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">transfer</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//失败时回滚</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">//payable(x).send(10) returns false; 失败时返回false</span></span>
<span class="line"><span style="color:#A6ACCD;">    一个合约怎么调用另一个合约</span><span style="color:#676E95;font-style:italic;">//把它的接口合约继承下来</span></span>
<span class="line"><span style="color:#A6ACCD;">    合约之间的调用有2种方式： 底层的call方式和 </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> 合约的方式   </span></span>
<span class="line"><span style="color:#A6ACCD;">        call</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">delegatecall</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">staticcall使用要非常小心</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">低级方法（重入风险）</span></span>
<span class="line"><span style="color:#A6ACCD;">            call：通过合约ContractAddres</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#A6ACCD;">(编码后的方法名和参数），返回调用是否成功，以及返回值data</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#82AAFF;">已弃用value</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)，</span><span style="color:#82AAFF;">gas</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                赞成</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> xx</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">和</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">gas</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">xx</span><span style="color:#89DDFF;">.}</span></span>
<span class="line"><span style="color:#A6ACCD;">                target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> xx</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">(data); 等同于target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#A6ACCD;">(xx)(data);</span><span style="color:#676E95;font-style:italic;">//给目标发xx个以太币</span></span>
<span class="line"><span style="color:#A6ACCD;">            delegatecall ：设计是为了调用其它合约的API用的</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">类似于 Copy了API合约的API函数到本地合约执行，会修改调用者合约的状态变量。</span></span>
<span class="line"><span style="color:#A6ACCD;">            staticcall: 由于也可以使用拜占庭静态调用。这与call基本相同，但如果被调用函数以任何方式修改状态，则会恢复</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">    uint </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> unit256 </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">256</span><span style="color:#A6ACCD;">    fixed浮点    bytes1</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">3.</span><span style="color:#89DDFF;">./</span><span style="color:#F78C6C;">32</span></span>
<span class="line"><span style="color:#A6ACCD;">    modifier </span><span style="color:#676E95;font-style:italic;">//aop用的,可以限定某方法只能发布者调用等</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">transfer</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">)如果你今天收到一笔ether</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">这个时候会去调用原本合约的receive或fallback函数</span></span>
<span class="line"><span style="color:#A6ACCD;">        使用“receive”关键字定义的接收以太函数</span><span style="color:#676E95;font-style:italic;">//0.6以后,如果存在，只要调用数据为空（无论是否接收到以太），都会调用</span></span>
<span class="line"><span style="color:#A6ACCD;">        使用“fallback”关键字定义的后备函数</span><span style="color:#676E95;font-style:italic;">//调用了所有不存在的函数将调用它</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    external </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//类似public,只是它要this.f()去调用, 区别是它内存被复用,没有memory copy操作,效率高</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">pure</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">不读写</span><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">view只读</span></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ICO</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">更像是发行一种虚拟代币</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">与股票差别在于不影响经营权</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">类似IPO</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">是用来筹钱的</span></span>
<span class="line"><span style="color:#A6ACCD;">ERC：Ethereum Request for Comments</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">零知识证明</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">比如我自己拿钥匙去开仓库拿出货品给你看</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">没给你钥匙的情况下还能证明我真的有钥匙</span></span>
<span class="line"><span style="color:#FFCB6B;">隔离见证</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">为了使区块链能存更多的东西</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">把普通用户用不到的 用于矿工在打包区块的时候用来验证每笔交易合法性的 </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">交易数字签名信息</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">拿出去</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">预言机</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">向智能合约输入或输出信息的源</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">如比特币价格信息网站</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">公共数据库</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">区块链</span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    DeFi</span><span style="color:#676E95;font-style:italic;">//LINK</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">点对点撮合代表项目</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Dharma</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">稳定币模式代表项目</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">MakerDAO发行DAI</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">流动池交易代表项目</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Compound</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//流动性挖矿=收益农耕</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//AMM自动&#39;做市商(也叫流动性提供者LP)&#39;解决流动性问题</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//问题,无常损失(IL)即我去交易比我不交易亏的钱</span></span>
<span class="line"><span style="color:#A6ACCD;">            Uniswap</span><span style="color:#676E95;font-style:italic;">//x*y=z恒定乘积做市商CPMM, 为任何代币增加流动性                </span></span>
<span class="line"><span style="color:#A6ACCD;">                Uniswap 平台由 </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> 个组件组成：“factory”、“router”和 N 个“pair</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s”</span></span>
<span class="line"><span style="color:#A6ACCD;">                    每个pair智能合约都管理一个由两个代币储备组成的流动资金池</span></span>
<span class="line"><span style="color:#A6ACCD;">                    滑点 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Price Slippage </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Price </span><span style="color:#FFCB6B;">Impact</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">您的交易将对该代币对的市场价格产生影响。在 ETH</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">DAI 等大型矿池中，小额交易对价格的影响可以忽略不计。但是，如果您进行大量交易或交易流动性低的代币对，那么价格影响可能会很大，并导致整体价格下降。</span></span>
<span class="line"><span style="color:#A6ACCD;">                    無常損失越大，滑点越小；無常損失越小，滑点越大。</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span></span>
<span class="line"><span style="color:#A6ACCD;">            Uniswap v3 版本中，和 v2 一样也有两种闪电贷的方式，但是是通过不同的函数接口来完成的。</span></span>
<span class="line"><span style="color:#A6ACCD;">                第一种是普通的闪电贷，即借入 token 和还贷 token 相同，通过 UniswapV3Pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flash</span><span style="color:#A6ACCD;">() 完成 </span><span style="color:#676E95;font-style:italic;">//IUniswapV3FlashCallback(msg.sender).uniswapV3FlashCallback(fee0, fee1, data);</span></span>
<span class="line"><span style="color:#A6ACCD;">                第二种是类似 v2 的 flash swap，即借入 token 和还贷 token 不同，这个是通过 UniswapV3Pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">swap</span><span style="color:#A6ACCD;">() 来完成的。</span><span style="color:#676E95;font-style:italic;">//IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(amount0, amount1, data);           </span></span>
<span class="line"><span style="color:#A6ACCD;">        Kyber </span><span style="color:#82AAFF;">动态做市商</span><span style="color:#A6ACCD;"> (DMM) (dmm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">exchange) 现已更名为KyberSwap</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 是下一代多链 AMM 协议，可通过其放大的池最大限度地利用流动性提供者的资金，提供高资本效率和优化回报的动态费用。</span></span>
<span class="line"><span style="color:#A6ACCD;">        Yearn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">finance</span><span style="color:#676E95;font-style:italic;">//在多个DeFi组织间借还实现自动最大化套利</span></span>
<span class="line"><span style="color:#A6ACCD;">    匿名币</span><span style="color:#676E95;font-style:italic;">//XMR</span></span>
<span class="line"><span style="color:#A6ACCD;">    物联网</span><span style="color:#676E95;font-style:italic;">//IOTA</span></span>
<span class="line"><span style="color:#A6ACCD;">    平台币</span><span style="color:#676E95;font-style:italic;">//HT</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">共识算法</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> proof </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> work </span></span>
<span class="line"><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">POS</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">proof </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> stake</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">取决于币龄</span><span style="color:#A6ACCD;">(币数</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">持有时间)</span></span>
<span class="line"><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DPOS</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">股份授权证明机制</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">比POS多了人大代表</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> 工作量证明（PoW，Proof </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> Work）        </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;"> 权益证明（PoS，Proof </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> Stake）   </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//3. 延迟工作量证明（dPoW，Delayed Proof-of-Work） //两种类型的节点：公证人节点和正常节点</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">4.</span><span style="color:#A6ACCD;"> 授权权益证明（DPoS，Delegated Proof</span><span style="color:#89DDFF;">-of-</span><span style="color:#A6ACCD;">Stake）</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">5.</span><span style="color:#A6ACCD;"> 实用拜占庭容错算法（PBFT：Practical Byzantine Fault Tolerance）</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//6. 授权拜占庭容错算法（dBFT，Delegated Byzantine Fault Tolerance）</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//7. 权威证明（PoA，Proof-of-Authority）</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//8. 所用时间证明（PoET，Proof of Elapsed Time）</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//9. 权益流通证明（PoSV，Proof of Stake Velocity）</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//10. 恒星共识（Stellar Consensus）</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//11. 活动证明（PoActivity，Proof Of Activity）</span></span>
<span class="line"><span style="color:#A6ACCD;">    Paxos算法分布式一致性算法</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">将系统中的角色分为提议者</span><span style="color:#A6ACCD;"> (Proposer)，</span><span style="color:#82AAFF;">决策者</span><span style="color:#A6ACCD;"> (Acceptor)，</span><span style="color:#82AAFF;">和最终决策学习者</span><span style="color:#A6ACCD;"> (Learner)</span><span style="color:#676E95;font-style:italic;">//假设了只有恶意节点,没有故障节点</span></span>
<span class="line"><span style="color:#A6ACCD;">    Raft实现了和Paxos相同的功能</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">将系统中的角色分为领导者</span><span style="color:#A6ACCD;">(Leader)、</span><span style="color:#82AAFF;">跟从者</span><span style="color:#A6ACCD;"> (Follower)</span><span style="color:#82AAFF;">和候选人</span><span style="color:#A6ACCD;"> (Candidate)</span></span></code></pre></div><p><img src="`+p+`" alt=""></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">DLT分布式账本技术</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Hyperlegder Fabric </span><span style="color:#676E95;font-style:italic;">//吸收了区块链和以太坊的优点</span></span>
<span class="line"><span style="color:#A6ACCD;">    是实名制的网络</span></span>
<span class="line"><span style="color:#A6ACCD;">    MSP会员服务提供er</span><span style="color:#676E95;font-style:italic;">//是一套验证接口</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">节点类型</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        Peer即普通节点</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">用来存储和同步账本ledger数据</span></span>
<span class="line"><span style="color:#A6ACCD;">            ledger记录的是world </span><span style="color:#82AAFF;">state键值对</span><span style="color:#A6ACCD;">(包含version)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">存在couchdb</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">leveldb里</span></span>
<span class="line"><span style="color:#A6ACCD;">            锚节点</span><span style="color:#676E95;font-style:italic;">//负责通信</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">client程序员操作的节点用来实例化交易</span><span style="color:#A6ACCD;">(可用工具SDK: cli</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> node sdk</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> java sdk来做到)</span></span>
<span class="line"><span style="color:#A6ACCD;">        orderer矿工节点负责交易确认</span></span>
<span class="line"><span style="color:#A6ACCD;">    Channel即私链</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">私网</span></span>
<span class="line"><span style="color:#A6ACCD;">    对等节点</span><span style="color:#676E95;font-style:italic;">//eg超级管理员到超级管理员</span></span>
<span class="line"><span style="color:#A6ACCD;">    背书</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">即节点把执行结果发给SDK去收集</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">SDK发给order节点去排序去确认</span></span>
<span class="line"><span style="color:#A6ACCD;">    背书策略</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">即投票策略</span><span style="color:#676E95;font-style:italic;">//决定这个合约在什么情况下才执行/写入账本</span></span></code></pre></div><p><img src="`+o+'" alt=""></p>',9),c=[t];function r(y,C,A,D,i,F){return n(),a("div",null,c)}const E=s(e,[["render",r]]);export{d as __pageData,E as default};
